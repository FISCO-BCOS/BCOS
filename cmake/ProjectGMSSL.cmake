include(ExternalProject)
include(GNUInstallDirs)

 if (BUILD_GM)
	if (CMAKE_SYSTEM_NAME MATCHES "Darwin")
	set(GMSSL_CONFIG_COMMAND sh ./Configure darwin64-x86_64-cc)
	else()
		set(GMSSL_CONFIG_COMMAND bash config -Wl,--rpath=./ shared)
	endif ()

 	set(GMSSL_BUILD_COMMAND make)

 	ExternalProject_Add(gmssl
		PREFIX ${CMAKE_SOURCE_DIR}/deps
		DOWNLOAD_NO_PROGRESS 1
		GIT_REPOSITORY https://github.com/guanzhi/GmSSL.git
		GIT_TAG 7f6165a3f9b499e58c5c880165b85bb8191f6cd5
		BUILD_IN_SOURCE 1
		CONFIGURE_COMMAND ${GMSSL_CONFIG_COMMAND}
		# LOG_CONFIGURE 1
		# LOG_BUILD 1
		# LOG_INSTALL 1
		BUILD_COMMAND ${GMSSL_BUILD_COMMAND}
		INSTALL_COMMAND ""
	)

 	ExternalProject_Get_Property(gmssl SOURCE_DIR)
	add_library(GMSSL STATIC IMPORTED)
	set(GMSSL_SUFFIX .a)
	set(GMSSL_INCLUDE_DIRS ${SOURCE_DIR}/include)
	set(GMSSL_LIBRARY ${SOURCE_DIR}/libssl${GMSSL_SUFFIX})
	set(GMSSL_CRYPTO_LIBRARIE ${SOURCE_DIR}/libcrypto${GMSSL_SUFFIX})
	set(GMSSL_LIBRARIES ${GMSSL_LIBRARY} ${GMSSL_CRYPTO_LIBRARIE})
	set_property(TARGET gmssl PROPERTY IMPORTED_LOCATION ${GMSSL_LIBRARIES})
	set_property(TARGET gmssl PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${GMSSL_INCLUDE_DIRS})

 	set(OPENSSL_INCLUDE_DIRS ${GMSSL_INCLUDE_DIRS})
	set(OPENSSL_LIBRARIES ${GMSSL_LIBRARY})
endif()