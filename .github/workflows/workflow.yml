name: FISCO-BCOS GitHub Actions
on:
  push:
    paths-ignore:
      - "docs/**"
      - "Changelog.md"
      - "README.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "Changelog.md"
      - "README.md"
  release:
    types: [published, created, edited]
jobs:
  # generate_covrage:
  #   name: generate_coverage
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-20.04, macos-12]
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 5
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: nightly-2021-06-17
  #         override: true
  #     - uses: actions/cache@v2
  #       id: deps_cache
  #       with:
  #         path: deps/src
  #         key: coverage-v8-notest-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
  #         restore-keys: |
  #           coverage-v8-notest-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
  #           coverage-v8-notest-${{ runner.temp }}-${{ github.base_ref }}-
  #           coverage-v8-notest-${{ runner.temp }}-
  #     - name: Prepare vcpkg
  #       uses: friendlyanon/setup-vcpkg@v1
  #       with: { committish: 7e3dcf74e37034eea358934a90a11d618520e139 }
  #     - name: configure
  #       # Note: must run test inner build directory, otherwise the gateway ut maybe failed
  #       run: mkdir -p build && cd build && cmake .. -DTESTS=ON  -DCOVERAGE=ON -DCMAKE_BUILD_TYPE=Debug  -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake ../
  #     - name: compile
  #       run: cd build && cmake --build . --parallel 4
  #     - name: make test
  #       run: cd build && CTEST_OUTPUT_ON_FAILURE=TRUE make test
  #     - name: generate coverage
  #       run: cd build && make cov
  #     - name: upload code coverage to codecov
  #       uses: codecov/codecov-action@v2
  #       with:
  #         file: ./build/coverage.info
  #         name: bcos rc4 coverage
  #         fail_ci_if_error: true
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-20.04, windows-2019, macos-12]
        os: [ubuntu-20.04, macos-12]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 5
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-06-17
          override: true
      - uses: actions/cache@v2
        id: deps_cache
        with:
          path: deps/src
          key: build-v8-notest-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
          restore-keys: |
            build-v8-notest-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
            build-v8-notest-${{ runner.temp }}-${{ github.base_ref }}-
            build-v8-notest-${{ runner.temp }}-
      - uses: hendrikmuhs/ccache-action@v1.1
        with:
          key: ${{ matrix.os }}-${{ matrix.type }}
      - name: Prepare vcpkg
        uses: friendlyanon/setup-vcpkg@v1
        with: { committish: 7e3dcf74e37034eea358934a90a11d618520e139 }
      - name: Build for windows
        if: runner.os == 'Windows'
        run: |
          mkdir -p build && cd build && cmake -DCMAKE_BUILD_TYPE=Release -DFULLNODE=OFF -DWITH_LIGHTNODE=OFF -DTESTS=ON -DVCPKG_TARGET_TRIPLET=x64-windows-static -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake ../
          cmake --build . --parallel 4
      - name: Build for linux
        if: runner.os == 'Linux'
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          export CC='gcc-10'
          export CXX='g++-10'
          mkdir -p build && cd build && cmake -DCMAKE_BUILD_TYPE=Release -DTESTS=ON -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake ../
          cmake --build . --parallel 4
      - name: Build for macos
        if: runner.os == 'macOS'
        run: |
          mkdir -p build && cd build && cmake -DCMAKE_BUILD_TYPE=Release -DTESTS=ON -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake ../
          cmake --build . --parallel 4
      - name: Test
        run:
          cd build && CTEST_OUTPUT_ON_FAILURE=TRUE ctest
  build_centos:
    name: build_centos
    runs-on: ubuntu-20.04
    container: docker.io/centos:7
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 5
      - uses: actions/cache@v2
        id: deps_cache
        with:
          path: deps/src
          key: build-v8-notest-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
          restore-keys: |
            build-v8-notest-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
            build-v8-notest-${{ runner.temp }}-${{ github.base_ref }}-
            build-v8-notest-${{ runner.temp }}-
      - name: Prepare centos tools
        run: |
          yum install yum install -y epel-release centos-release-scl flex bison
          yum install -y devtoolset-10 llvm-toolset-7 rh-perl530-perl cmake3 zlib-devel
          yum install -y https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm
          yum install -y git
      - name: Prepare vcpkg
        uses: friendlyanon/setup-vcpkg@v1
        with: { committish: 7e3dcf74e37034eea358934a90a11d618520e139 }
      - uses: hendrikmuhs/ccache-action@v1.1
        with:
          key: ${{ matrix.os }}-${{ matrix.type }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-06-17
          override: true
      - name: Build
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          alias cmake='cmake3'
          . /opt/rh/devtoolset-10/enable
          . /opt/rh/rh-perl530/enable
          export LIBCLANG_PATH=/opt/rh/llvm-toolset-7/root/lib64/
          . /opt/rh/llvm-toolset-7/enable
          mkdir -p build
          cd build
          cmake3 -DCMAKE_BUILD_TYPE=Release -DTESTS=ON -DVCPKG_BUILD_TYPE=release -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake ../
          cmake3 --build . --parallel 4
      - name: Test
        run:
          cd build && CTEST_OUTPUT_ON_FAILURE=TRUE make test