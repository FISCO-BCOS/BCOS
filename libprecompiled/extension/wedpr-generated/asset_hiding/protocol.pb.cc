// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

#include "protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CreditStorage_common_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreditValue_common_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HiddenCredit_common_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protocol_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SplitArgument_protocol_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protocol_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TransferArgument_protocol_2eproto;
namespace com {
namespace webank {
namespace wedpr {
namespace asset_hiding {
namespace proto {
class IssueArgumentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IssueArgument> _instance;
} _IssueArgument_default_instance_;
class IssueRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IssueRequest> _instance;
} _IssueRequest_default_instance_;
class FulfillArgumentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FulfillArgument> _instance;
} _FulfillArgument_default_instance_;
class FulfillRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FulfillRequest> _instance;
} _FulfillRequest_default_instance_;
class TransferArgumentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TransferArgument> _instance;
} _TransferArgument_default_instance_;
class SplitArgumentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SplitArgument> _instance;
} _SplitArgument_default_instance_;
class TransferRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TransferRequest> _instance;
} _TransferRequest_default_instance_;
class SplitRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SplitRequest> _instance;
} _SplitRequest_default_instance_;
}  // namespace proto
}  // namespace asset_hiding
}  // namespace wedpr
}  // namespace webank
}  // namespace com
static void InitDefaultsscc_info_FulfillArgument_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::webank::wedpr::asset_hiding::proto::_FulfillArgument_default_instance_;
    new (ptr) ::com::webank::wedpr::asset_hiding::proto::FulfillArgument();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::webank::wedpr::asset_hiding::proto::FulfillArgument::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FulfillArgument_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_FulfillArgument_protocol_2eproto}, {
      &scc_info_CreditStorage_common_2eproto.base,}};

static void InitDefaultsscc_info_FulfillRequest_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::webank::wedpr::asset_hiding::proto::_FulfillRequest_default_instance_;
    new (ptr) ::com::webank::wedpr::asset_hiding::proto::FulfillRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::webank::wedpr::asset_hiding::proto::FulfillRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FulfillRequest_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_FulfillRequest_protocol_2eproto}, {
      &scc_info_CreditStorage_common_2eproto.base,}};

static void InitDefaultsscc_info_IssueArgument_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::webank::wedpr::asset_hiding::proto::_IssueArgument_default_instance_;
    new (ptr) ::com::webank::wedpr::asset_hiding::proto::IssueArgument();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::webank::wedpr::asset_hiding::proto::IssueArgument::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_IssueArgument_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_IssueArgument_protocol_2eproto}, {
      &scc_info_CreditStorage_common_2eproto.base,
      &scc_info_CreditValue_common_2eproto.base,}};

static void InitDefaultsscc_info_IssueRequest_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::webank::wedpr::asset_hiding::proto::_IssueRequest_default_instance_;
    new (ptr) ::com::webank::wedpr::asset_hiding::proto::IssueRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::webank::wedpr::asset_hiding::proto::IssueRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IssueRequest_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_IssueRequest_protocol_2eproto}, {
      &scc_info_CreditStorage_common_2eproto.base,}};

static void InitDefaultsscc_info_SplitArgument_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::webank::wedpr::asset_hiding::proto::_SplitArgument_default_instance_;
    new (ptr) ::com::webank::wedpr::asset_hiding::proto::SplitArgument();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::webank::wedpr::asset_hiding::proto::SplitArgument::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SplitArgument_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_SplitArgument_protocol_2eproto}, {
      &scc_info_TransferArgument_protocol_2eproto.base,}};

static void InitDefaultsscc_info_SplitRequest_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::webank::wedpr::asset_hiding::proto::_SplitRequest_default_instance_;
    new (ptr) ::com::webank::wedpr::asset_hiding::proto::SplitRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::webank::wedpr::asset_hiding::proto::SplitRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SplitRequest_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_SplitRequest_protocol_2eproto}, {
      &scc_info_CreditStorage_common_2eproto.base,
      &scc_info_SplitArgument_protocol_2eproto.base,}};

static void InitDefaultsscc_info_TransferArgument_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::webank::wedpr::asset_hiding::proto::_TransferArgument_default_instance_;
    new (ptr) ::com::webank::wedpr::asset_hiding::proto::TransferArgument();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::webank::wedpr::asset_hiding::proto::TransferArgument::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TransferArgument_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_TransferArgument_protocol_2eproto}, {
      &scc_info_HiddenCredit_common_2eproto.base,}};

static void InitDefaultsscc_info_TransferRequest_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::webank::wedpr::asset_hiding::proto::_TransferRequest_default_instance_;
    new (ptr) ::com::webank::wedpr::asset_hiding::proto::TransferRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::webank::wedpr::asset_hiding::proto::TransferRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_TransferRequest_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_TransferRequest_protocol_2eproto}, {
      &scc_info_CreditStorage_common_2eproto.base,
      &scc_info_TransferArgument_protocol_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_protocol_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_protocol_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_protocol_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_protocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::IssueArgument, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::IssueArgument, credit_storage_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::IssueArgument, r_g_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::IssueArgument, credit_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::IssueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::IssueRequest, credit_storage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::FulfillArgument, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::FulfillArgument, credit_storage_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::FulfillArgument, knowledge_proof_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::FulfillRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::FulfillRequest, credit_storage_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::FulfillRequest, knowledge_proof_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::TransferArgument, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::TransferArgument, k_g_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::TransferArgument, r_g_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::TransferArgument, d_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::TransferArgument, s_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::TransferArgument, v_d_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::TransferArgument, range_proof_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::TransferArgument, knowledge_proof_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::TransferArgument, hidden_credit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::SplitArgument, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::SplitArgument, sender_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::SplitArgument, receiver_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::SplitArgument, message_hash_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::TransferRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::TransferRequest, spent_credit_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::TransferRequest, new_credit_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::TransferRequest, argument_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::TransferRequest, message_hash_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::SplitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::SplitRequest, spent_credit_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::SplitRequest, new_credit_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::SplitRequest, argument_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::webank::wedpr::asset_hiding::proto::IssueArgument)},
  { 8, -1, sizeof(::com::webank::wedpr::asset_hiding::proto::IssueRequest)},
  { 14, -1, sizeof(::com::webank::wedpr::asset_hiding::proto::FulfillArgument)},
  { 21, -1, sizeof(::com::webank::wedpr::asset_hiding::proto::FulfillRequest)},
  { 28, -1, sizeof(::com::webank::wedpr::asset_hiding::proto::TransferArgument)},
  { 41, -1, sizeof(::com::webank::wedpr::asset_hiding::proto::SplitArgument)},
  { 49, -1, sizeof(::com::webank::wedpr::asset_hiding::proto::TransferRequest)},
  { 58, -1, sizeof(::com::webank::wedpr::asset_hiding::proto::SplitRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::webank::wedpr::asset_hiding::proto::_IssueArgument_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::webank::wedpr::asset_hiding::proto::_IssueRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::webank::wedpr::asset_hiding::proto::_FulfillArgument_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::webank::wedpr::asset_hiding::proto::_FulfillRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::webank::wedpr::asset_hiding::proto::_TransferArgument_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::webank::wedpr::asset_hiding::proto::_SplitArgument_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::webank::wedpr::asset_hiding::proto::_TransferRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::webank::wedpr::asset_hiding::proto::_SplitRequest_default_instance_),
};

const char descriptor_table_protodef_protocol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016protocol.proto\022#com.webank.wedpr.asset"
  "_hiding.proto\032\014common.proto\"\260\001\n\rIssueArg"
  "ument\022J\n\016credit_storage\030\001 \001(\01322.com.weba"
  "nk.wedpr.asset_hiding.proto.CreditStorag"
  "e\022\013\n\003r_g\030\002 \001(\t\022F\n\014credit_value\030\003 \001(\01320.c"
  "om.webank.wedpr.asset_hiding.proto.Credi"
  "tValue\"Z\n\014IssueRequest\022J\n\016credit_storage"
  "\030\001 \001(\01322.com.webank.wedpr.asset_hiding.p"
  "roto.CreditStorage\"v\n\017FulfillArgument\022J\n"
  "\016credit_storage\030\001 \001(\01322.com.webank.wedpr"
  ".asset_hiding.proto.CreditStorage\022\027\n\017kno"
  "wledge_proof\030\002 \001(\t\"u\n\016FulfillRequest\022J\n\016"
  "credit_storage\030\001 \001(\01322.com.webank.wedpr."
  "asset_hiding.proto.CreditStorage\022\027\n\017know"
  "ledge_proof\030\002 \001(\t\"\307\001\n\020TransferArgument\022\013"
  "\n\003k_g\030\001 \001(\t\022\013\n\003r_g\030\002 \001(\t\022\t\n\001d\030\003 \001(\t\022\t\n\001s"
  "\030\004 \001(\t\022\013\n\003v_d\030\005 \001(\t\022\023\n\013range_proof\030\006 \001(\t"
  "\022\027\n\017knowledge_proof\030\007 \001(\t\022H\n\rhidden_cred"
  "it\030\010 \001(\01321.com.webank.wedpr.asset_hiding"
  ".proto.HiddenCredit\"\265\001\n\rSplitArgument\022E\n"
  "\006sender\030\001 \003(\01325.com.webank.wedpr.asset_h"
  "iding.proto.TransferArgument\022G\n\010receiver"
  "\030\002 \003(\01325.com.webank.wedpr.asset_hiding.p"
  "roto.TransferArgument\022\024\n\014message_hash\030\003 "
  "\001(\t\"\202\002\n\017TransferRequest\022H\n\014spent_credit\030"
  "\001 \001(\01322.com.webank.wedpr.asset_hiding.pr"
  "oto.CreditStorage\022F\n\nnew_credit\030\002 \001(\01322."
  "com.webank.wedpr.asset_hiding.proto.Cred"
  "itStorage\022G\n\010argument\030\003 \001(\01325.com.webank"
  ".wedpr.asset_hiding.proto.TransferArgume"
  "nt\022\024\n\014message_hash\030\004 \001(\t\"\346\001\n\014SplitReques"
  "t\022H\n\014spent_credit\030\001 \003(\01322.com.webank.wed"
  "pr.asset_hiding.proto.CreditStorage\022F\n\nn"
  "ew_credit\030\002 \003(\01322.com.webank.wedpr.asset"
  "_hiding.proto.CreditStorage\022D\n\010argument\030"
  "\003 \001(\01322.com.webank.wedpr.asset_hiding.pr"
  "oto.SplitArgumentb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_protocol_2eproto_deps[1] = {
  &::descriptor_table_common_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_protocol_2eproto_sccs[8] = {
  &scc_info_FulfillArgument_protocol_2eproto.base,
  &scc_info_FulfillRequest_protocol_2eproto.base,
  &scc_info_IssueArgument_protocol_2eproto.base,
  &scc_info_IssueRequest_protocol_2eproto.base,
  &scc_info_SplitArgument_protocol_2eproto.base,
  &scc_info_SplitRequest_protocol_2eproto.base,
  &scc_info_TransferArgument_protocol_2eproto.base,
  &scc_info_TransferRequest_protocol_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_protocol_2eproto_once;
static bool descriptor_table_protocol_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_protocol_2eproto = {
  &descriptor_table_protocol_2eproto_initialized, descriptor_table_protodef_protocol_2eproto, "protocol.proto", 1465,
  &descriptor_table_protocol_2eproto_once, descriptor_table_protocol_2eproto_sccs, descriptor_table_protocol_2eproto_deps, 8, 1,
  schemas, file_default_instances, TableStruct_protocol_2eproto::offsets,
  file_level_metadata_protocol_2eproto, 8, file_level_enum_descriptors_protocol_2eproto, file_level_service_descriptors_protocol_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_protocol_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_protocol_2eproto), true);
namespace com {
namespace webank {
namespace wedpr {
namespace asset_hiding {
namespace proto {

// ===================================================================

void IssueArgument::InitAsDefaultInstance() {
  ::com::webank::wedpr::asset_hiding::proto::_IssueArgument_default_instance_._instance.get_mutable()->credit_storage_ = const_cast< ::com::webank::wedpr::asset_hiding::proto::CreditStorage*>(
      ::com::webank::wedpr::asset_hiding::proto::CreditStorage::internal_default_instance());
  ::com::webank::wedpr::asset_hiding::proto::_IssueArgument_default_instance_._instance.get_mutable()->credit_value_ = const_cast< ::com::webank::wedpr::asset_hiding::proto::CreditValue*>(
      ::com::webank::wedpr::asset_hiding::proto::CreditValue::internal_default_instance());
}
class IssueArgument::_Internal {
 public:
  static const ::com::webank::wedpr::asset_hiding::proto::CreditStorage& credit_storage(const IssueArgument* msg);
  static const ::com::webank::wedpr::asset_hiding::proto::CreditValue& credit_value(const IssueArgument* msg);
};

const ::com::webank::wedpr::asset_hiding::proto::CreditStorage&
IssueArgument::_Internal::credit_storage(const IssueArgument* msg) {
  return *msg->credit_storage_;
}
const ::com::webank::wedpr::asset_hiding::proto::CreditValue&
IssueArgument::_Internal::credit_value(const IssueArgument* msg) {
  return *msg->credit_value_;
}
void IssueArgument::clear_credit_storage() {
  if (GetArenaNoVirtual() == nullptr && credit_storage_ != nullptr) {
    delete credit_storage_;
  }
  credit_storage_ = nullptr;
}
void IssueArgument::clear_credit_value() {
  if (GetArenaNoVirtual() == nullptr && credit_value_ != nullptr) {
    delete credit_value_;
  }
  credit_value_ = nullptr;
}
IssueArgument::IssueArgument()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.webank.wedpr.asset_hiding.proto.IssueArgument)
}
IssueArgument::IssueArgument(const IssueArgument& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  r_g_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.r_g().empty()) {
    r_g_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.r_g_);
  }
  if (from.has_credit_storage()) {
    credit_storage_ = new ::com::webank::wedpr::asset_hiding::proto::CreditStorage(*from.credit_storage_);
  } else {
    credit_storage_ = nullptr;
  }
  if (from.has_credit_value()) {
    credit_value_ = new ::com::webank::wedpr::asset_hiding::proto::CreditValue(*from.credit_value_);
  } else {
    credit_value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.webank.wedpr.asset_hiding.proto.IssueArgument)
}

void IssueArgument::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IssueArgument_protocol_2eproto.base);
  r_g_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&credit_storage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&credit_value_) -
      reinterpret_cast<char*>(&credit_storage_)) + sizeof(credit_value_));
}

IssueArgument::~IssueArgument() {
  // @@protoc_insertion_point(destructor:com.webank.wedpr.asset_hiding.proto.IssueArgument)
  SharedDtor();
}

void IssueArgument::SharedDtor() {
  r_g_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete credit_storage_;
  if (this != internal_default_instance()) delete credit_value_;
}

void IssueArgument::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IssueArgument& IssueArgument::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IssueArgument_protocol_2eproto.base);
  return *internal_default_instance();
}


void IssueArgument::Clear() {
// @@protoc_insertion_point(message_clear_start:com.webank.wedpr.asset_hiding.proto.IssueArgument)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  r_g_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && credit_storage_ != nullptr) {
    delete credit_storage_;
  }
  credit_storage_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && credit_value_ != nullptr) {
    delete credit_value_;
  }
  credit_value_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IssueArgument::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_credit_storage(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string r_g = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_r_g(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.IssueArgument.r_g");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.webank.wedpr.asset_hiding.proto.CreditValue credit_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_credit_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IssueArgument::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.webank.wedpr.asset_hiding.proto.IssueArgument)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_credit_storage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string r_g = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_r_g()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->r_g().data(), static_cast<int>(this->r_g().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.IssueArgument.r_g"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.webank.wedpr.asset_hiding.proto.CreditValue credit_value = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_credit_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.webank.wedpr.asset_hiding.proto.IssueArgument)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.webank.wedpr.asset_hiding.proto.IssueArgument)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IssueArgument::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.webank.wedpr.asset_hiding.proto.IssueArgument)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
  if (this->has_credit_storage()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::credit_storage(this), output);
  }

  // string r_g = 2;
  if (this->r_g().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->r_g().data(), static_cast<int>(this->r_g().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.IssueArgument.r_g");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->r_g(), output);
  }

  // .com.webank.wedpr.asset_hiding.proto.CreditValue credit_value = 3;
  if (this->has_credit_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::credit_value(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.webank.wedpr.asset_hiding.proto.IssueArgument)
}

::PROTOBUF_NAMESPACE_ID::uint8* IssueArgument::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.webank.wedpr.asset_hiding.proto.IssueArgument)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
  if (this->has_credit_storage()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::credit_storage(this), target);
  }

  // string r_g = 2;
  if (this->r_g().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->r_g().data(), static_cast<int>(this->r_g().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.IssueArgument.r_g");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->r_g(), target);
  }

  // .com.webank.wedpr.asset_hiding.proto.CreditValue credit_value = 3;
  if (this->has_credit_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::credit_value(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.webank.wedpr.asset_hiding.proto.IssueArgument)
  return target;
}

size_t IssueArgument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.webank.wedpr.asset_hiding.proto.IssueArgument)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string r_g = 2;
  if (this->r_g().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->r_g());
  }

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
  if (this->has_credit_storage()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *credit_storage_);
  }

  // .com.webank.wedpr.asset_hiding.proto.CreditValue credit_value = 3;
  if (this->has_credit_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *credit_value_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IssueArgument::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.webank.wedpr.asset_hiding.proto.IssueArgument)
  GOOGLE_DCHECK_NE(&from, this);
  const IssueArgument* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IssueArgument>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.webank.wedpr.asset_hiding.proto.IssueArgument)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.webank.wedpr.asset_hiding.proto.IssueArgument)
    MergeFrom(*source);
  }
}

void IssueArgument::MergeFrom(const IssueArgument& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.webank.wedpr.asset_hiding.proto.IssueArgument)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.r_g().size() > 0) {

    r_g_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.r_g_);
  }
  if (from.has_credit_storage()) {
    mutable_credit_storage()->::com::webank::wedpr::asset_hiding::proto::CreditStorage::MergeFrom(from.credit_storage());
  }
  if (from.has_credit_value()) {
    mutable_credit_value()->::com::webank::wedpr::asset_hiding::proto::CreditValue::MergeFrom(from.credit_value());
  }
}

void IssueArgument::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.webank.wedpr.asset_hiding.proto.IssueArgument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IssueArgument::CopyFrom(const IssueArgument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.webank.wedpr.asset_hiding.proto.IssueArgument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IssueArgument::IsInitialized() const {
  return true;
}

void IssueArgument::InternalSwap(IssueArgument* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  r_g_.Swap(&other->r_g_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(credit_storage_, other->credit_storage_);
  swap(credit_value_, other->credit_value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IssueArgument::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IssueRequest::InitAsDefaultInstance() {
  ::com::webank::wedpr::asset_hiding::proto::_IssueRequest_default_instance_._instance.get_mutable()->credit_storage_ = const_cast< ::com::webank::wedpr::asset_hiding::proto::CreditStorage*>(
      ::com::webank::wedpr::asset_hiding::proto::CreditStorage::internal_default_instance());
}
class IssueRequest::_Internal {
 public:
  static const ::com::webank::wedpr::asset_hiding::proto::CreditStorage& credit_storage(const IssueRequest* msg);
};

const ::com::webank::wedpr::asset_hiding::proto::CreditStorage&
IssueRequest::_Internal::credit_storage(const IssueRequest* msg) {
  return *msg->credit_storage_;
}
void IssueRequest::clear_credit_storage() {
  if (GetArenaNoVirtual() == nullptr && credit_storage_ != nullptr) {
    delete credit_storage_;
  }
  credit_storage_ = nullptr;
}
IssueRequest::IssueRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.webank.wedpr.asset_hiding.proto.IssueRequest)
}
IssueRequest::IssueRequest(const IssueRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_credit_storage()) {
    credit_storage_ = new ::com::webank::wedpr::asset_hiding::proto::CreditStorage(*from.credit_storage_);
  } else {
    credit_storage_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.webank.wedpr.asset_hiding.proto.IssueRequest)
}

void IssueRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IssueRequest_protocol_2eproto.base);
  credit_storage_ = nullptr;
}

IssueRequest::~IssueRequest() {
  // @@protoc_insertion_point(destructor:com.webank.wedpr.asset_hiding.proto.IssueRequest)
  SharedDtor();
}

void IssueRequest::SharedDtor() {
  if (this != internal_default_instance()) delete credit_storage_;
}

void IssueRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IssueRequest& IssueRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IssueRequest_protocol_2eproto.base);
  return *internal_default_instance();
}


void IssueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.webank.wedpr.asset_hiding.proto.IssueRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && credit_storage_ != nullptr) {
    delete credit_storage_;
  }
  credit_storage_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IssueRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_credit_storage(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IssueRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.webank.wedpr.asset_hiding.proto.IssueRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_credit_storage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.webank.wedpr.asset_hiding.proto.IssueRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.webank.wedpr.asset_hiding.proto.IssueRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IssueRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.webank.wedpr.asset_hiding.proto.IssueRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
  if (this->has_credit_storage()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::credit_storage(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.webank.wedpr.asset_hiding.proto.IssueRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* IssueRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.webank.wedpr.asset_hiding.proto.IssueRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
  if (this->has_credit_storage()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::credit_storage(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.webank.wedpr.asset_hiding.proto.IssueRequest)
  return target;
}

size_t IssueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.webank.wedpr.asset_hiding.proto.IssueRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
  if (this->has_credit_storage()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *credit_storage_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IssueRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.webank.wedpr.asset_hiding.proto.IssueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IssueRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IssueRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.webank.wedpr.asset_hiding.proto.IssueRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.webank.wedpr.asset_hiding.proto.IssueRequest)
    MergeFrom(*source);
  }
}

void IssueRequest::MergeFrom(const IssueRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.webank.wedpr.asset_hiding.proto.IssueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_credit_storage()) {
    mutable_credit_storage()->::com::webank::wedpr::asset_hiding::proto::CreditStorage::MergeFrom(from.credit_storage());
  }
}

void IssueRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.webank.wedpr.asset_hiding.proto.IssueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IssueRequest::CopyFrom(const IssueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.webank.wedpr.asset_hiding.proto.IssueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IssueRequest::IsInitialized() const {
  return true;
}

void IssueRequest::InternalSwap(IssueRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(credit_storage_, other->credit_storage_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IssueRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FulfillArgument::InitAsDefaultInstance() {
  ::com::webank::wedpr::asset_hiding::proto::_FulfillArgument_default_instance_._instance.get_mutable()->credit_storage_ = const_cast< ::com::webank::wedpr::asset_hiding::proto::CreditStorage*>(
      ::com::webank::wedpr::asset_hiding::proto::CreditStorage::internal_default_instance());
}
class FulfillArgument::_Internal {
 public:
  static const ::com::webank::wedpr::asset_hiding::proto::CreditStorage& credit_storage(const FulfillArgument* msg);
};

const ::com::webank::wedpr::asset_hiding::proto::CreditStorage&
FulfillArgument::_Internal::credit_storage(const FulfillArgument* msg) {
  return *msg->credit_storage_;
}
void FulfillArgument::clear_credit_storage() {
  if (GetArenaNoVirtual() == nullptr && credit_storage_ != nullptr) {
    delete credit_storage_;
  }
  credit_storage_ = nullptr;
}
FulfillArgument::FulfillArgument()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.webank.wedpr.asset_hiding.proto.FulfillArgument)
}
FulfillArgument::FulfillArgument(const FulfillArgument& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  knowledge_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.knowledge_proof().empty()) {
    knowledge_proof_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.knowledge_proof_);
  }
  if (from.has_credit_storage()) {
    credit_storage_ = new ::com::webank::wedpr::asset_hiding::proto::CreditStorage(*from.credit_storage_);
  } else {
    credit_storage_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.webank.wedpr.asset_hiding.proto.FulfillArgument)
}

void FulfillArgument::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FulfillArgument_protocol_2eproto.base);
  knowledge_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  credit_storage_ = nullptr;
}

FulfillArgument::~FulfillArgument() {
  // @@protoc_insertion_point(destructor:com.webank.wedpr.asset_hiding.proto.FulfillArgument)
  SharedDtor();
}

void FulfillArgument::SharedDtor() {
  knowledge_proof_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete credit_storage_;
}

void FulfillArgument::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FulfillArgument& FulfillArgument::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FulfillArgument_protocol_2eproto.base);
  return *internal_default_instance();
}


void FulfillArgument::Clear() {
// @@protoc_insertion_point(message_clear_start:com.webank.wedpr.asset_hiding.proto.FulfillArgument)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  knowledge_proof_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && credit_storage_ != nullptr) {
    delete credit_storage_;
  }
  credit_storage_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FulfillArgument::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_credit_storage(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string knowledge_proof = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_knowledge_proof(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.FulfillArgument.knowledge_proof");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FulfillArgument::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.webank.wedpr.asset_hiding.proto.FulfillArgument)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_credit_storage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string knowledge_proof = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_knowledge_proof()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->knowledge_proof().data(), static_cast<int>(this->knowledge_proof().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.FulfillArgument.knowledge_proof"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.webank.wedpr.asset_hiding.proto.FulfillArgument)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.webank.wedpr.asset_hiding.proto.FulfillArgument)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FulfillArgument::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.webank.wedpr.asset_hiding.proto.FulfillArgument)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
  if (this->has_credit_storage()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::credit_storage(this), output);
  }

  // string knowledge_proof = 2;
  if (this->knowledge_proof().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->knowledge_proof().data(), static_cast<int>(this->knowledge_proof().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.FulfillArgument.knowledge_proof");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->knowledge_proof(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.webank.wedpr.asset_hiding.proto.FulfillArgument)
}

::PROTOBUF_NAMESPACE_ID::uint8* FulfillArgument::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.webank.wedpr.asset_hiding.proto.FulfillArgument)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
  if (this->has_credit_storage()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::credit_storage(this), target);
  }

  // string knowledge_proof = 2;
  if (this->knowledge_proof().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->knowledge_proof().data(), static_cast<int>(this->knowledge_proof().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.FulfillArgument.knowledge_proof");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->knowledge_proof(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.webank.wedpr.asset_hiding.proto.FulfillArgument)
  return target;
}

size_t FulfillArgument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.webank.wedpr.asset_hiding.proto.FulfillArgument)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string knowledge_proof = 2;
  if (this->knowledge_proof().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->knowledge_proof());
  }

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
  if (this->has_credit_storage()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *credit_storage_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FulfillArgument::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.webank.wedpr.asset_hiding.proto.FulfillArgument)
  GOOGLE_DCHECK_NE(&from, this);
  const FulfillArgument* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FulfillArgument>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.webank.wedpr.asset_hiding.proto.FulfillArgument)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.webank.wedpr.asset_hiding.proto.FulfillArgument)
    MergeFrom(*source);
  }
}

void FulfillArgument::MergeFrom(const FulfillArgument& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.webank.wedpr.asset_hiding.proto.FulfillArgument)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.knowledge_proof().size() > 0) {

    knowledge_proof_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.knowledge_proof_);
  }
  if (from.has_credit_storage()) {
    mutable_credit_storage()->::com::webank::wedpr::asset_hiding::proto::CreditStorage::MergeFrom(from.credit_storage());
  }
}

void FulfillArgument::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.webank.wedpr.asset_hiding.proto.FulfillArgument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FulfillArgument::CopyFrom(const FulfillArgument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.webank.wedpr.asset_hiding.proto.FulfillArgument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FulfillArgument::IsInitialized() const {
  return true;
}

void FulfillArgument::InternalSwap(FulfillArgument* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  knowledge_proof_.Swap(&other->knowledge_proof_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(credit_storage_, other->credit_storage_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FulfillArgument::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FulfillRequest::InitAsDefaultInstance() {
  ::com::webank::wedpr::asset_hiding::proto::_FulfillRequest_default_instance_._instance.get_mutable()->credit_storage_ = const_cast< ::com::webank::wedpr::asset_hiding::proto::CreditStorage*>(
      ::com::webank::wedpr::asset_hiding::proto::CreditStorage::internal_default_instance());
}
class FulfillRequest::_Internal {
 public:
  static const ::com::webank::wedpr::asset_hiding::proto::CreditStorage& credit_storage(const FulfillRequest* msg);
};

const ::com::webank::wedpr::asset_hiding::proto::CreditStorage&
FulfillRequest::_Internal::credit_storage(const FulfillRequest* msg) {
  return *msg->credit_storage_;
}
void FulfillRequest::clear_credit_storage() {
  if (GetArenaNoVirtual() == nullptr && credit_storage_ != nullptr) {
    delete credit_storage_;
  }
  credit_storage_ = nullptr;
}
FulfillRequest::FulfillRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.webank.wedpr.asset_hiding.proto.FulfillRequest)
}
FulfillRequest::FulfillRequest(const FulfillRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  knowledge_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.knowledge_proof().empty()) {
    knowledge_proof_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.knowledge_proof_);
  }
  if (from.has_credit_storage()) {
    credit_storage_ = new ::com::webank::wedpr::asset_hiding::proto::CreditStorage(*from.credit_storage_);
  } else {
    credit_storage_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.webank.wedpr.asset_hiding.proto.FulfillRequest)
}

void FulfillRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FulfillRequest_protocol_2eproto.base);
  knowledge_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  credit_storage_ = nullptr;
}

FulfillRequest::~FulfillRequest() {
  // @@protoc_insertion_point(destructor:com.webank.wedpr.asset_hiding.proto.FulfillRequest)
  SharedDtor();
}

void FulfillRequest::SharedDtor() {
  knowledge_proof_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete credit_storage_;
}

void FulfillRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FulfillRequest& FulfillRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FulfillRequest_protocol_2eproto.base);
  return *internal_default_instance();
}


void FulfillRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.webank.wedpr.asset_hiding.proto.FulfillRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  knowledge_proof_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && credit_storage_ != nullptr) {
    delete credit_storage_;
  }
  credit_storage_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FulfillRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_credit_storage(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string knowledge_proof = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_knowledge_proof(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.FulfillRequest.knowledge_proof");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FulfillRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.webank.wedpr.asset_hiding.proto.FulfillRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_credit_storage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string knowledge_proof = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_knowledge_proof()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->knowledge_proof().data(), static_cast<int>(this->knowledge_proof().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.FulfillRequest.knowledge_proof"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.webank.wedpr.asset_hiding.proto.FulfillRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.webank.wedpr.asset_hiding.proto.FulfillRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FulfillRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.webank.wedpr.asset_hiding.proto.FulfillRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
  if (this->has_credit_storage()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::credit_storage(this), output);
  }

  // string knowledge_proof = 2;
  if (this->knowledge_proof().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->knowledge_proof().data(), static_cast<int>(this->knowledge_proof().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.FulfillRequest.knowledge_proof");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->knowledge_proof(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.webank.wedpr.asset_hiding.proto.FulfillRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* FulfillRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.webank.wedpr.asset_hiding.proto.FulfillRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
  if (this->has_credit_storage()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::credit_storage(this), target);
  }

  // string knowledge_proof = 2;
  if (this->knowledge_proof().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->knowledge_proof().data(), static_cast<int>(this->knowledge_proof().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.FulfillRequest.knowledge_proof");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->knowledge_proof(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.webank.wedpr.asset_hiding.proto.FulfillRequest)
  return target;
}

size_t FulfillRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.webank.wedpr.asset_hiding.proto.FulfillRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string knowledge_proof = 2;
  if (this->knowledge_proof().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->knowledge_proof());
  }

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
  if (this->has_credit_storage()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *credit_storage_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FulfillRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.webank.wedpr.asset_hiding.proto.FulfillRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FulfillRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FulfillRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.webank.wedpr.asset_hiding.proto.FulfillRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.webank.wedpr.asset_hiding.proto.FulfillRequest)
    MergeFrom(*source);
  }
}

void FulfillRequest::MergeFrom(const FulfillRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.webank.wedpr.asset_hiding.proto.FulfillRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.knowledge_proof().size() > 0) {

    knowledge_proof_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.knowledge_proof_);
  }
  if (from.has_credit_storage()) {
    mutable_credit_storage()->::com::webank::wedpr::asset_hiding::proto::CreditStorage::MergeFrom(from.credit_storage());
  }
}

void FulfillRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.webank.wedpr.asset_hiding.proto.FulfillRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FulfillRequest::CopyFrom(const FulfillRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.webank.wedpr.asset_hiding.proto.FulfillRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FulfillRequest::IsInitialized() const {
  return true;
}

void FulfillRequest::InternalSwap(FulfillRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  knowledge_proof_.Swap(&other->knowledge_proof_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(credit_storage_, other->credit_storage_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FulfillRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TransferArgument::InitAsDefaultInstance() {
  ::com::webank::wedpr::asset_hiding::proto::_TransferArgument_default_instance_._instance.get_mutable()->hidden_credit_ = const_cast< ::com::webank::wedpr::asset_hiding::proto::HiddenCredit*>(
      ::com::webank::wedpr::asset_hiding::proto::HiddenCredit::internal_default_instance());
}
class TransferArgument::_Internal {
 public:
  static const ::com::webank::wedpr::asset_hiding::proto::HiddenCredit& hidden_credit(const TransferArgument* msg);
};

const ::com::webank::wedpr::asset_hiding::proto::HiddenCredit&
TransferArgument::_Internal::hidden_credit(const TransferArgument* msg) {
  return *msg->hidden_credit_;
}
void TransferArgument::clear_hidden_credit() {
  if (GetArenaNoVirtual() == nullptr && hidden_credit_ != nullptr) {
    delete hidden_credit_;
  }
  hidden_credit_ = nullptr;
}
TransferArgument::TransferArgument()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.webank.wedpr.asset_hiding.proto.TransferArgument)
}
TransferArgument::TransferArgument(const TransferArgument& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  k_g_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.k_g().empty()) {
    k_g_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.k_g_);
  }
  r_g_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.r_g().empty()) {
    r_g_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.r_g_);
  }
  d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.d().empty()) {
    d_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.d_);
  }
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.s().empty()) {
    s_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.s_);
  }
  v_d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.v_d().empty()) {
    v_d_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.v_d_);
  }
  range_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.range_proof().empty()) {
    range_proof_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.range_proof_);
  }
  knowledge_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.knowledge_proof().empty()) {
    knowledge_proof_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.knowledge_proof_);
  }
  if (from.has_hidden_credit()) {
    hidden_credit_ = new ::com::webank::wedpr::asset_hiding::proto::HiddenCredit(*from.hidden_credit_);
  } else {
    hidden_credit_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.webank.wedpr.asset_hiding.proto.TransferArgument)
}

void TransferArgument::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TransferArgument_protocol_2eproto.base);
  k_g_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  r_g_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  v_d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  range_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  knowledge_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hidden_credit_ = nullptr;
}

TransferArgument::~TransferArgument() {
  // @@protoc_insertion_point(destructor:com.webank.wedpr.asset_hiding.proto.TransferArgument)
  SharedDtor();
}

void TransferArgument::SharedDtor() {
  k_g_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  r_g_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  d_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  v_d_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  range_proof_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  knowledge_proof_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete hidden_credit_;
}

void TransferArgument::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransferArgument& TransferArgument::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TransferArgument_protocol_2eproto.base);
  return *internal_default_instance();
}


void TransferArgument::Clear() {
// @@protoc_insertion_point(message_clear_start:com.webank.wedpr.asset_hiding.proto.TransferArgument)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_g_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  r_g_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  d_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  v_d_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  range_proof_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  knowledge_proof_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && hidden_credit_ != nullptr) {
    delete hidden_credit_;
  }
  hidden_credit_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TransferArgument::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string k_g = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_k_g(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.TransferArgument.k_g");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string r_g = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_r_g(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.TransferArgument.r_g");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string d = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_d(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.TransferArgument.d");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string s = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_s(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.TransferArgument.s");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string v_d = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_v_d(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.TransferArgument.v_d");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string range_proof = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_range_proof(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.TransferArgument.range_proof");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string knowledge_proof = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_knowledge_proof(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.TransferArgument.knowledge_proof");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.webank.wedpr.asset_hiding.proto.HiddenCredit hidden_credit = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(mutable_hidden_credit(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TransferArgument::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.webank.wedpr.asset_hiding.proto.TransferArgument)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string k_g = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_k_g()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->k_g().data(), static_cast<int>(this->k_g().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.TransferArgument.k_g"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string r_g = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_r_g()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->r_g().data(), static_cast<int>(this->r_g().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.TransferArgument.r_g"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string d = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_d()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->d().data(), static_cast<int>(this->d().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.TransferArgument.d"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string s = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_s()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->s().data(), static_cast<int>(this->s().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.TransferArgument.s"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string v_d = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_v_d()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->v_d().data(), static_cast<int>(this->v_d().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.TransferArgument.v_d"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string range_proof = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_range_proof()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->range_proof().data(), static_cast<int>(this->range_proof().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.TransferArgument.range_proof"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string knowledge_proof = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_knowledge_proof()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->knowledge_proof().data(), static_cast<int>(this->knowledge_proof().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.TransferArgument.knowledge_proof"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.webank.wedpr.asset_hiding.proto.HiddenCredit hidden_credit = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_hidden_credit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.webank.wedpr.asset_hiding.proto.TransferArgument)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.webank.wedpr.asset_hiding.proto.TransferArgument)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TransferArgument::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.webank.wedpr.asset_hiding.proto.TransferArgument)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string k_g = 1;
  if (this->k_g().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->k_g().data(), static_cast<int>(this->k_g().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.TransferArgument.k_g");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->k_g(), output);
  }

  // string r_g = 2;
  if (this->r_g().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->r_g().data(), static_cast<int>(this->r_g().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.TransferArgument.r_g");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->r_g(), output);
  }

  // string d = 3;
  if (this->d().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->d().data(), static_cast<int>(this->d().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.TransferArgument.d");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->d(), output);
  }

  // string s = 4;
  if (this->s().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->s().data(), static_cast<int>(this->s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.TransferArgument.s");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->s(), output);
  }

  // string v_d = 5;
  if (this->v_d().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->v_d().data(), static_cast<int>(this->v_d().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.TransferArgument.v_d");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->v_d(), output);
  }

  // string range_proof = 6;
  if (this->range_proof().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->range_proof().data(), static_cast<int>(this->range_proof().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.TransferArgument.range_proof");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->range_proof(), output);
  }

  // string knowledge_proof = 7;
  if (this->knowledge_proof().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->knowledge_proof().data(), static_cast<int>(this->knowledge_proof().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.TransferArgument.knowledge_proof");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->knowledge_proof(), output);
  }

  // .com.webank.wedpr.asset_hiding.proto.HiddenCredit hidden_credit = 8;
  if (this->has_hidden_credit()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, _Internal::hidden_credit(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.webank.wedpr.asset_hiding.proto.TransferArgument)
}

::PROTOBUF_NAMESPACE_ID::uint8* TransferArgument::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.webank.wedpr.asset_hiding.proto.TransferArgument)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string k_g = 1;
  if (this->k_g().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->k_g().data(), static_cast<int>(this->k_g().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.TransferArgument.k_g");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->k_g(), target);
  }

  // string r_g = 2;
  if (this->r_g().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->r_g().data(), static_cast<int>(this->r_g().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.TransferArgument.r_g");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->r_g(), target);
  }

  // string d = 3;
  if (this->d().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->d().data(), static_cast<int>(this->d().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.TransferArgument.d");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->d(), target);
  }

  // string s = 4;
  if (this->s().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->s().data(), static_cast<int>(this->s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.TransferArgument.s");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->s(), target);
  }

  // string v_d = 5;
  if (this->v_d().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->v_d().data(), static_cast<int>(this->v_d().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.TransferArgument.v_d");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        5, this->v_d(), target);
  }

  // string range_proof = 6;
  if (this->range_proof().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->range_proof().data(), static_cast<int>(this->range_proof().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.TransferArgument.range_proof");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        6, this->range_proof(), target);
  }

  // string knowledge_proof = 7;
  if (this->knowledge_proof().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->knowledge_proof().data(), static_cast<int>(this->knowledge_proof().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.TransferArgument.knowledge_proof");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        7, this->knowledge_proof(), target);
  }

  // .com.webank.wedpr.asset_hiding.proto.HiddenCredit hidden_credit = 8;
  if (this->has_hidden_credit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, _Internal::hidden_credit(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.webank.wedpr.asset_hiding.proto.TransferArgument)
  return target;
}

size_t TransferArgument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.webank.wedpr.asset_hiding.proto.TransferArgument)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string k_g = 1;
  if (this->k_g().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->k_g());
  }

  // string r_g = 2;
  if (this->r_g().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->r_g());
  }

  // string d = 3;
  if (this->d().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->d());
  }

  // string s = 4;
  if (this->s().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->s());
  }

  // string v_d = 5;
  if (this->v_d().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->v_d());
  }

  // string range_proof = 6;
  if (this->range_proof().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->range_proof());
  }

  // string knowledge_proof = 7;
  if (this->knowledge_proof().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->knowledge_proof());
  }

  // .com.webank.wedpr.asset_hiding.proto.HiddenCredit hidden_credit = 8;
  if (this->has_hidden_credit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *hidden_credit_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferArgument::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.webank.wedpr.asset_hiding.proto.TransferArgument)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferArgument* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TransferArgument>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.webank.wedpr.asset_hiding.proto.TransferArgument)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.webank.wedpr.asset_hiding.proto.TransferArgument)
    MergeFrom(*source);
  }
}

void TransferArgument::MergeFrom(const TransferArgument& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.webank.wedpr.asset_hiding.proto.TransferArgument)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.k_g().size() > 0) {

    k_g_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.k_g_);
  }
  if (from.r_g().size() > 0) {

    r_g_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.r_g_);
  }
  if (from.d().size() > 0) {

    d_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.d_);
  }
  if (from.s().size() > 0) {

    s_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.s_);
  }
  if (from.v_d().size() > 0) {

    v_d_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.v_d_);
  }
  if (from.range_proof().size() > 0) {

    range_proof_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.range_proof_);
  }
  if (from.knowledge_proof().size() > 0) {

    knowledge_proof_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.knowledge_proof_);
  }
  if (from.has_hidden_credit()) {
    mutable_hidden_credit()->::com::webank::wedpr::asset_hiding::proto::HiddenCredit::MergeFrom(from.hidden_credit());
  }
}

void TransferArgument::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.webank.wedpr.asset_hiding.proto.TransferArgument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferArgument::CopyFrom(const TransferArgument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.webank.wedpr.asset_hiding.proto.TransferArgument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferArgument::IsInitialized() const {
  return true;
}

void TransferArgument::InternalSwap(TransferArgument* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  k_g_.Swap(&other->k_g_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  r_g_.Swap(&other->r_g_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  d_.Swap(&other->d_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  s_.Swap(&other->s_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  v_d_.Swap(&other->v_d_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  range_proof_.Swap(&other->range_proof_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  knowledge_proof_.Swap(&other->knowledge_proof_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hidden_credit_, other->hidden_credit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransferArgument::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SplitArgument::InitAsDefaultInstance() {
}
class SplitArgument::_Internal {
 public:
};

SplitArgument::SplitArgument()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.webank.wedpr.asset_hiding.proto.SplitArgument)
}
SplitArgument::SplitArgument(const SplitArgument& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      sender_(from.sender_),
      receiver_(from.receiver_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.message_hash().empty()) {
    message_hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_hash_);
  }
  // @@protoc_insertion_point(copy_constructor:com.webank.wedpr.asset_hiding.proto.SplitArgument)
}

void SplitArgument::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SplitArgument_protocol_2eproto.base);
  message_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SplitArgument::~SplitArgument() {
  // @@protoc_insertion_point(destructor:com.webank.wedpr.asset_hiding.proto.SplitArgument)
  SharedDtor();
}

void SplitArgument::SharedDtor() {
  message_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SplitArgument::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SplitArgument& SplitArgument::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SplitArgument_protocol_2eproto.base);
  return *internal_default_instance();
}


void SplitArgument::Clear() {
// @@protoc_insertion_point(message_clear_start:com.webank.wedpr.asset_hiding.proto.SplitArgument)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sender_.Clear();
  receiver_.Clear();
  message_hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SplitArgument::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .com.webank.wedpr.asset_hiding.proto.TransferArgument sender = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_sender(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated .com.webank.wedpr.asset_hiding.proto.TransferArgument receiver = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_receiver(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // string message_hash = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_message_hash(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.SplitArgument.message_hash");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SplitArgument::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.webank.wedpr.asset_hiding.proto.SplitArgument)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.webank.wedpr.asset_hiding.proto.TransferArgument sender = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_sender()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.webank.wedpr.asset_hiding.proto.TransferArgument receiver = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_receiver()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message_hash = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_message_hash()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->message_hash().data(), static_cast<int>(this->message_hash().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.SplitArgument.message_hash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.webank.wedpr.asset_hiding.proto.SplitArgument)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.webank.wedpr.asset_hiding.proto.SplitArgument)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SplitArgument::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.webank.wedpr.asset_hiding.proto.SplitArgument)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.webank.wedpr.asset_hiding.proto.TransferArgument sender = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sender_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sender(static_cast<int>(i)),
      output);
  }

  // repeated .com.webank.wedpr.asset_hiding.proto.TransferArgument receiver = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->receiver_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->receiver(static_cast<int>(i)),
      output);
  }

  // string message_hash = 3;
  if (this->message_hash().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->message_hash().data(), static_cast<int>(this->message_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.SplitArgument.message_hash");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message_hash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.webank.wedpr.asset_hiding.proto.SplitArgument)
}

::PROTOBUF_NAMESPACE_ID::uint8* SplitArgument::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.webank.wedpr.asset_hiding.proto.SplitArgument)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.webank.wedpr.asset_hiding.proto.TransferArgument sender = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sender_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sender(static_cast<int>(i)), target);
  }

  // repeated .com.webank.wedpr.asset_hiding.proto.TransferArgument receiver = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->receiver_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->receiver(static_cast<int>(i)), target);
  }

  // string message_hash = 3;
  if (this->message_hash().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->message_hash().data(), static_cast<int>(this->message_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.SplitArgument.message_hash");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->message_hash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.webank.wedpr.asset_hiding.proto.SplitArgument)
  return target;
}

size_t SplitArgument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.webank.wedpr.asset_hiding.proto.SplitArgument)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.webank.wedpr.asset_hiding.proto.TransferArgument sender = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sender_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->sender(static_cast<int>(i)));
    }
  }

  // repeated .com.webank.wedpr.asset_hiding.proto.TransferArgument receiver = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->receiver_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->receiver(static_cast<int>(i)));
    }
  }

  // string message_hash = 3;
  if (this->message_hash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->message_hash());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SplitArgument::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.webank.wedpr.asset_hiding.proto.SplitArgument)
  GOOGLE_DCHECK_NE(&from, this);
  const SplitArgument* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SplitArgument>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.webank.wedpr.asset_hiding.proto.SplitArgument)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.webank.wedpr.asset_hiding.proto.SplitArgument)
    MergeFrom(*source);
  }
}

void SplitArgument::MergeFrom(const SplitArgument& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.webank.wedpr.asset_hiding.proto.SplitArgument)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sender_.MergeFrom(from.sender_);
  receiver_.MergeFrom(from.receiver_);
  if (from.message_hash().size() > 0) {

    message_hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_hash_);
  }
}

void SplitArgument::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.webank.wedpr.asset_hiding.proto.SplitArgument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SplitArgument::CopyFrom(const SplitArgument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.webank.wedpr.asset_hiding.proto.SplitArgument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SplitArgument::IsInitialized() const {
  return true;
}

void SplitArgument::InternalSwap(SplitArgument* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&sender_)->InternalSwap(CastToBase(&other->sender_));
  CastToBase(&receiver_)->InternalSwap(CastToBase(&other->receiver_));
  message_hash_.Swap(&other->message_hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata SplitArgument::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TransferRequest::InitAsDefaultInstance() {
  ::com::webank::wedpr::asset_hiding::proto::_TransferRequest_default_instance_._instance.get_mutable()->spent_credit_ = const_cast< ::com::webank::wedpr::asset_hiding::proto::CreditStorage*>(
      ::com::webank::wedpr::asset_hiding::proto::CreditStorage::internal_default_instance());
  ::com::webank::wedpr::asset_hiding::proto::_TransferRequest_default_instance_._instance.get_mutable()->new_credit_ = const_cast< ::com::webank::wedpr::asset_hiding::proto::CreditStorage*>(
      ::com::webank::wedpr::asset_hiding::proto::CreditStorage::internal_default_instance());
  ::com::webank::wedpr::asset_hiding::proto::_TransferRequest_default_instance_._instance.get_mutable()->argument_ = const_cast< ::com::webank::wedpr::asset_hiding::proto::TransferArgument*>(
      ::com::webank::wedpr::asset_hiding::proto::TransferArgument::internal_default_instance());
}
class TransferRequest::_Internal {
 public:
  static const ::com::webank::wedpr::asset_hiding::proto::CreditStorage& spent_credit(const TransferRequest* msg);
  static const ::com::webank::wedpr::asset_hiding::proto::CreditStorage& new_credit(const TransferRequest* msg);
  static const ::com::webank::wedpr::asset_hiding::proto::TransferArgument& argument(const TransferRequest* msg);
};

const ::com::webank::wedpr::asset_hiding::proto::CreditStorage&
TransferRequest::_Internal::spent_credit(const TransferRequest* msg) {
  return *msg->spent_credit_;
}
const ::com::webank::wedpr::asset_hiding::proto::CreditStorage&
TransferRequest::_Internal::new_credit(const TransferRequest* msg) {
  return *msg->new_credit_;
}
const ::com::webank::wedpr::asset_hiding::proto::TransferArgument&
TransferRequest::_Internal::argument(const TransferRequest* msg) {
  return *msg->argument_;
}
void TransferRequest::clear_spent_credit() {
  if (GetArenaNoVirtual() == nullptr && spent_credit_ != nullptr) {
    delete spent_credit_;
  }
  spent_credit_ = nullptr;
}
void TransferRequest::clear_new_credit() {
  if (GetArenaNoVirtual() == nullptr && new_credit_ != nullptr) {
    delete new_credit_;
  }
  new_credit_ = nullptr;
}
TransferRequest::TransferRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.webank.wedpr.asset_hiding.proto.TransferRequest)
}
TransferRequest::TransferRequest(const TransferRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.message_hash().empty()) {
    message_hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_hash_);
  }
  if (from.has_spent_credit()) {
    spent_credit_ = new ::com::webank::wedpr::asset_hiding::proto::CreditStorage(*from.spent_credit_);
  } else {
    spent_credit_ = nullptr;
  }
  if (from.has_new_credit()) {
    new_credit_ = new ::com::webank::wedpr::asset_hiding::proto::CreditStorage(*from.new_credit_);
  } else {
    new_credit_ = nullptr;
  }
  if (from.has_argument()) {
    argument_ = new ::com::webank::wedpr::asset_hiding::proto::TransferArgument(*from.argument_);
  } else {
    argument_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.webank.wedpr.asset_hiding.proto.TransferRequest)
}

void TransferRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TransferRequest_protocol_2eproto.base);
  message_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&spent_credit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&argument_) -
      reinterpret_cast<char*>(&spent_credit_)) + sizeof(argument_));
}

TransferRequest::~TransferRequest() {
  // @@protoc_insertion_point(destructor:com.webank.wedpr.asset_hiding.proto.TransferRequest)
  SharedDtor();
}

void TransferRequest::SharedDtor() {
  message_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete spent_credit_;
  if (this != internal_default_instance()) delete new_credit_;
  if (this != internal_default_instance()) delete argument_;
}

void TransferRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransferRequest& TransferRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TransferRequest_protocol_2eproto.base);
  return *internal_default_instance();
}


void TransferRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.webank.wedpr.asset_hiding.proto.TransferRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && spent_credit_ != nullptr) {
    delete spent_credit_;
  }
  spent_credit_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && new_credit_ != nullptr) {
    delete new_credit_;
  }
  new_credit_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && argument_ != nullptr) {
    delete argument_;
  }
  argument_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TransferRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.webank.wedpr.asset_hiding.proto.CreditStorage spent_credit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_spent_credit(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.webank.wedpr.asset_hiding.proto.CreditStorage new_credit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_new_credit(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.webank.wedpr.asset_hiding.proto.TransferArgument argument = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_argument(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message_hash = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_message_hash(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.TransferRequest.message_hash");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TransferRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.webank.wedpr.asset_hiding.proto.TransferRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.webank.wedpr.asset_hiding.proto.CreditStorage spent_credit = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_spent_credit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.webank.wedpr.asset_hiding.proto.CreditStorage new_credit = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_new_credit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.webank.wedpr.asset_hiding.proto.TransferArgument argument = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_argument()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message_hash = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_message_hash()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->message_hash().data(), static_cast<int>(this->message_hash().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.TransferRequest.message_hash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.webank.wedpr.asset_hiding.proto.TransferRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.webank.wedpr.asset_hiding.proto.TransferRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TransferRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.webank.wedpr.asset_hiding.proto.TransferRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage spent_credit = 1;
  if (this->has_spent_credit()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::spent_credit(this), output);
  }

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage new_credit = 2;
  if (this->has_new_credit()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::new_credit(this), output);
  }

  // .com.webank.wedpr.asset_hiding.proto.TransferArgument argument = 3;
  if (this->has_argument()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::argument(this), output);
  }

  // string message_hash = 4;
  if (this->message_hash().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->message_hash().data(), static_cast<int>(this->message_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.TransferRequest.message_hash");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->message_hash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.webank.wedpr.asset_hiding.proto.TransferRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* TransferRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.webank.wedpr.asset_hiding.proto.TransferRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage spent_credit = 1;
  if (this->has_spent_credit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::spent_credit(this), target);
  }

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage new_credit = 2;
  if (this->has_new_credit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::new_credit(this), target);
  }

  // .com.webank.wedpr.asset_hiding.proto.TransferArgument argument = 3;
  if (this->has_argument()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::argument(this), target);
  }

  // string message_hash = 4;
  if (this->message_hash().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->message_hash().data(), static_cast<int>(this->message_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.TransferRequest.message_hash");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->message_hash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.webank.wedpr.asset_hiding.proto.TransferRequest)
  return target;
}

size_t TransferRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.webank.wedpr.asset_hiding.proto.TransferRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message_hash = 4;
  if (this->message_hash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->message_hash());
  }

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage spent_credit = 1;
  if (this->has_spent_credit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *spent_credit_);
  }

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage new_credit = 2;
  if (this->has_new_credit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *new_credit_);
  }

  // .com.webank.wedpr.asset_hiding.proto.TransferArgument argument = 3;
  if (this->has_argument()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *argument_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.webank.wedpr.asset_hiding.proto.TransferRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TransferRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.webank.wedpr.asset_hiding.proto.TransferRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.webank.wedpr.asset_hiding.proto.TransferRequest)
    MergeFrom(*source);
  }
}

void TransferRequest::MergeFrom(const TransferRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.webank.wedpr.asset_hiding.proto.TransferRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message_hash().size() > 0) {

    message_hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_hash_);
  }
  if (from.has_spent_credit()) {
    mutable_spent_credit()->::com::webank::wedpr::asset_hiding::proto::CreditStorage::MergeFrom(from.spent_credit());
  }
  if (from.has_new_credit()) {
    mutable_new_credit()->::com::webank::wedpr::asset_hiding::proto::CreditStorage::MergeFrom(from.new_credit());
  }
  if (from.has_argument()) {
    mutable_argument()->::com::webank::wedpr::asset_hiding::proto::TransferArgument::MergeFrom(from.argument());
  }
}

void TransferRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.webank.wedpr.asset_hiding.proto.TransferRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferRequest::CopyFrom(const TransferRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.webank.wedpr.asset_hiding.proto.TransferRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferRequest::IsInitialized() const {
  return true;
}

void TransferRequest::InternalSwap(TransferRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  message_hash_.Swap(&other->message_hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(spent_credit_, other->spent_credit_);
  swap(new_credit_, other->new_credit_);
  swap(argument_, other->argument_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransferRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SplitRequest::InitAsDefaultInstance() {
  ::com::webank::wedpr::asset_hiding::proto::_SplitRequest_default_instance_._instance.get_mutable()->argument_ = const_cast< ::com::webank::wedpr::asset_hiding::proto::SplitArgument*>(
      ::com::webank::wedpr::asset_hiding::proto::SplitArgument::internal_default_instance());
}
class SplitRequest::_Internal {
 public:
  static const ::com::webank::wedpr::asset_hiding::proto::SplitArgument& argument(const SplitRequest* msg);
};

const ::com::webank::wedpr::asset_hiding::proto::SplitArgument&
SplitRequest::_Internal::argument(const SplitRequest* msg) {
  return *msg->argument_;
}
void SplitRequest::clear_spent_credit() {
  spent_credit_.Clear();
}
void SplitRequest::clear_new_credit() {
  new_credit_.Clear();
}
SplitRequest::SplitRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.webank.wedpr.asset_hiding.proto.SplitRequest)
}
SplitRequest::SplitRequest(const SplitRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      spent_credit_(from.spent_credit_),
      new_credit_(from.new_credit_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_argument()) {
    argument_ = new ::com::webank::wedpr::asset_hiding::proto::SplitArgument(*from.argument_);
  } else {
    argument_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.webank.wedpr.asset_hiding.proto.SplitRequest)
}

void SplitRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SplitRequest_protocol_2eproto.base);
  argument_ = nullptr;
}

SplitRequest::~SplitRequest() {
  // @@protoc_insertion_point(destructor:com.webank.wedpr.asset_hiding.proto.SplitRequest)
  SharedDtor();
}

void SplitRequest::SharedDtor() {
  if (this != internal_default_instance()) delete argument_;
}

void SplitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SplitRequest& SplitRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SplitRequest_protocol_2eproto.base);
  return *internal_default_instance();
}


void SplitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.webank.wedpr.asset_hiding.proto.SplitRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spent_credit_.Clear();
  new_credit_.Clear();
  if (GetArenaNoVirtual() == nullptr && argument_ != nullptr) {
    delete argument_;
  }
  argument_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SplitRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .com.webank.wedpr.asset_hiding.proto.CreditStorage spent_credit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_spent_credit(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated .com.webank.wedpr.asset_hiding.proto.CreditStorage new_credit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_new_credit(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // .com.webank.wedpr.asset_hiding.proto.SplitArgument argument = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_argument(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SplitRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.webank.wedpr.asset_hiding.proto.SplitRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.webank.wedpr.asset_hiding.proto.CreditStorage spent_credit = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_spent_credit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.webank.wedpr.asset_hiding.proto.CreditStorage new_credit = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_new_credit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.webank.wedpr.asset_hiding.proto.SplitArgument argument = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_argument()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.webank.wedpr.asset_hiding.proto.SplitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.webank.wedpr.asset_hiding.proto.SplitRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SplitRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.webank.wedpr.asset_hiding.proto.SplitRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.webank.wedpr.asset_hiding.proto.CreditStorage spent_credit = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spent_credit_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->spent_credit(static_cast<int>(i)),
      output);
  }

  // repeated .com.webank.wedpr.asset_hiding.proto.CreditStorage new_credit = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->new_credit_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->new_credit(static_cast<int>(i)),
      output);
  }

  // .com.webank.wedpr.asset_hiding.proto.SplitArgument argument = 3;
  if (this->has_argument()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::argument(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.webank.wedpr.asset_hiding.proto.SplitRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* SplitRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.webank.wedpr.asset_hiding.proto.SplitRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.webank.wedpr.asset_hiding.proto.CreditStorage spent_credit = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spent_credit_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->spent_credit(static_cast<int>(i)), target);
  }

  // repeated .com.webank.wedpr.asset_hiding.proto.CreditStorage new_credit = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->new_credit_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->new_credit(static_cast<int>(i)), target);
  }

  // .com.webank.wedpr.asset_hiding.proto.SplitArgument argument = 3;
  if (this->has_argument()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::argument(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.webank.wedpr.asset_hiding.proto.SplitRequest)
  return target;
}

size_t SplitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.webank.wedpr.asset_hiding.proto.SplitRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.webank.wedpr.asset_hiding.proto.CreditStorage spent_credit = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->spent_credit_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->spent_credit(static_cast<int>(i)));
    }
  }

  // repeated .com.webank.wedpr.asset_hiding.proto.CreditStorage new_credit = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->new_credit_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->new_credit(static_cast<int>(i)));
    }
  }

  // .com.webank.wedpr.asset_hiding.proto.SplitArgument argument = 3;
  if (this->has_argument()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *argument_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SplitRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.webank.wedpr.asset_hiding.proto.SplitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SplitRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SplitRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.webank.wedpr.asset_hiding.proto.SplitRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.webank.wedpr.asset_hiding.proto.SplitRequest)
    MergeFrom(*source);
  }
}

void SplitRequest::MergeFrom(const SplitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.webank.wedpr.asset_hiding.proto.SplitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  spent_credit_.MergeFrom(from.spent_credit_);
  new_credit_.MergeFrom(from.new_credit_);
  if (from.has_argument()) {
    mutable_argument()->::com::webank::wedpr::asset_hiding::proto::SplitArgument::MergeFrom(from.argument());
  }
}

void SplitRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.webank.wedpr.asset_hiding.proto.SplitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SplitRequest::CopyFrom(const SplitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.webank.wedpr.asset_hiding.proto.SplitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SplitRequest::IsInitialized() const {
  return true;
}

void SplitRequest::InternalSwap(SplitRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&spent_credit_)->InternalSwap(CastToBase(&other->spent_credit_));
  CastToBase(&new_credit_)->InternalSwap(CastToBase(&other->new_credit_));
  swap(argument_, other->argument_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SplitRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace asset_hiding
}  // namespace wedpr
}  // namespace webank
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::webank::wedpr::asset_hiding::proto::IssueArgument* Arena::CreateMaybeMessage< ::com::webank::wedpr::asset_hiding::proto::IssueArgument >(Arena* arena) {
  return Arena::CreateInternal< ::com::webank::wedpr::asset_hiding::proto::IssueArgument >(arena);
}
template<> PROTOBUF_NOINLINE ::com::webank::wedpr::asset_hiding::proto::IssueRequest* Arena::CreateMaybeMessage< ::com::webank::wedpr::asset_hiding::proto::IssueRequest >(Arena* arena) {
  return Arena::CreateInternal< ::com::webank::wedpr::asset_hiding::proto::IssueRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::com::webank::wedpr::asset_hiding::proto::FulfillArgument* Arena::CreateMaybeMessage< ::com::webank::wedpr::asset_hiding::proto::FulfillArgument >(Arena* arena) {
  return Arena::CreateInternal< ::com::webank::wedpr::asset_hiding::proto::FulfillArgument >(arena);
}
template<> PROTOBUF_NOINLINE ::com::webank::wedpr::asset_hiding::proto::FulfillRequest* Arena::CreateMaybeMessage< ::com::webank::wedpr::asset_hiding::proto::FulfillRequest >(Arena* arena) {
  return Arena::CreateInternal< ::com::webank::wedpr::asset_hiding::proto::FulfillRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::com::webank::wedpr::asset_hiding::proto::TransferArgument* Arena::CreateMaybeMessage< ::com::webank::wedpr::asset_hiding::proto::TransferArgument >(Arena* arena) {
  return Arena::CreateInternal< ::com::webank::wedpr::asset_hiding::proto::TransferArgument >(arena);
}
template<> PROTOBUF_NOINLINE ::com::webank::wedpr::asset_hiding::proto::SplitArgument* Arena::CreateMaybeMessage< ::com::webank::wedpr::asset_hiding::proto::SplitArgument >(Arena* arena) {
  return Arena::CreateInternal< ::com::webank::wedpr::asset_hiding::proto::SplitArgument >(arena);
}
template<> PROTOBUF_NOINLINE ::com::webank::wedpr::asset_hiding::proto::TransferRequest* Arena::CreateMaybeMessage< ::com::webank::wedpr::asset_hiding::proto::TransferRequest >(Arena* arena) {
  return Arena::CreateInternal< ::com::webank::wedpr::asset_hiding::proto::TransferRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::com::webank::wedpr::asset_hiding::proto::SplitRequest* Arena::CreateMaybeMessage< ::com::webank::wedpr::asset_hiding::proto::SplitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::com::webank::wedpr::asset_hiding::proto::SplitRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
