// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#include "common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CreditCredential_common_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreditSecret_common_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CreditStorage_common_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreditValue_common_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HiddenCredit_common_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignatureInfo_common_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TransactionInfo_common_2eproto;
namespace com {
namespace webank {
namespace wedpr {
namespace asset_hiding {
namespace proto {
class HiddenCreditDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HiddenCredit> _instance;
} _HiddenCredit_default_instance_;
class CreditStorageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreditStorage> _instance;
} _CreditStorage_default_instance_;
class CreditValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreditValue> _instance;
  ::PROTOBUF_NAMESPACE_ID::int64 numerical_value_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr string_value_;
} _CreditValue_default_instance_;
class CreditSecretDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreditSecret> _instance;
} _CreditSecret_default_instance_;
class CreditCredentialDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreditCredential> _instance;
} _CreditCredential_default_instance_;
class SignatureInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SignatureInfo> _instance;
} _SignatureInfo_default_instance_;
class TransactionInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TransactionInfo> _instance;
} _TransactionInfo_default_instance_;
class RegulationInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegulationInfo> _instance;
} _RegulationInfo_default_instance_;
class RawCreditSecretDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RawCreditSecret> _instance;
} _RawCreditSecret_default_instance_;
}  // namespace proto
}  // namespace asset_hiding
}  // namespace wedpr
}  // namespace webank
}  // namespace com
static void InitDefaultsscc_info_CreditCredential_common_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::webank::wedpr::asset_hiding::proto::_CreditCredential_default_instance_;
    new (ptr) ::com::webank::wedpr::asset_hiding::proto::CreditCredential();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::webank::wedpr::asset_hiding::proto::CreditCredential::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CreditCredential_common_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_CreditCredential_common_2eproto}, {
      &scc_info_CreditStorage_common_2eproto.base,
      &scc_info_CreditSecret_common_2eproto.base,}};

static void InitDefaultsscc_info_CreditSecret_common_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::webank::wedpr::asset_hiding::proto::_CreditSecret_default_instance_;
    new (ptr) ::com::webank::wedpr::asset_hiding::proto::CreditSecret();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::webank::wedpr::asset_hiding::proto::CreditSecret::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreditSecret_common_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_CreditSecret_common_2eproto}, {
      &scc_info_CreditValue_common_2eproto.base,}};

static void InitDefaultsscc_info_CreditStorage_common_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::webank::wedpr::asset_hiding::proto::_CreditStorage_default_instance_;
    new (ptr) ::com::webank::wedpr::asset_hiding::proto::CreditStorage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::webank::wedpr::asset_hiding::proto::CreditStorage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CreditStorage_common_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_CreditStorage_common_2eproto}, {
      &scc_info_SignatureInfo_common_2eproto.base,
      &scc_info_HiddenCredit_common_2eproto.base,}};

static void InitDefaultsscc_info_CreditValue_common_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::webank::wedpr::asset_hiding::proto::_CreditValue_default_instance_;
    new (ptr) ::com::webank::wedpr::asset_hiding::proto::CreditValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::webank::wedpr::asset_hiding::proto::CreditValue::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreditValue_common_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_CreditValue_common_2eproto}, {}};

static void InitDefaultsscc_info_HiddenCredit_common_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::webank::wedpr::asset_hiding::proto::_HiddenCredit_default_instance_;
    new (ptr) ::com::webank::wedpr::asset_hiding::proto::HiddenCredit();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::webank::wedpr::asset_hiding::proto::HiddenCredit::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HiddenCredit_common_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_HiddenCredit_common_2eproto}, {}};

static void InitDefaultsscc_info_RawCreditSecret_common_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::webank::wedpr::asset_hiding::proto::_RawCreditSecret_default_instance_;
    new (ptr) ::com::webank::wedpr::asset_hiding::proto::RawCreditSecret();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::webank::wedpr::asset_hiding::proto::RawCreditSecret::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RawCreditSecret_common_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_RawCreditSecret_common_2eproto}, {
      &scc_info_CreditSecret_common_2eproto.base,}};

static void InitDefaultsscc_info_RegulationInfo_common_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::webank::wedpr::asset_hiding::proto::_RegulationInfo_default_instance_;
    new (ptr) ::com::webank::wedpr::asset_hiding::proto::RegulationInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::webank::wedpr::asset_hiding::proto::RegulationInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RegulationInfo_common_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_RegulationInfo_common_2eproto}, {
      &scc_info_TransactionInfo_common_2eproto.base,
      &scc_info_CreditCredential_common_2eproto.base,}};

static void InitDefaultsscc_info_SignatureInfo_common_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::webank::wedpr::asset_hiding::proto::_SignatureInfo_default_instance_;
    new (ptr) ::com::webank::wedpr::asset_hiding::proto::SignatureInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::webank::wedpr::asset_hiding::proto::SignatureInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignatureInfo_common_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SignatureInfo_common_2eproto}, {}};

static void InitDefaultsscc_info_TransactionInfo_common_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::webank::wedpr::asset_hiding::proto::_TransactionInfo_default_instance_;
    new (ptr) ::com::webank::wedpr::asset_hiding::proto::TransactionInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::webank::wedpr::asset_hiding::proto::TransactionInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TransactionInfo_common_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_TransactionInfo_common_2eproto}, {
      &scc_info_CreditValue_common_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_common_2eproto[9];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_common_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_common_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_common_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::HiddenCredit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::HiddenCredit, commitment_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::HiddenCredit, commitment_uuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::CreditStorage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::CreditStorage, signature_info_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::CreditStorage, timestamp_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::CreditStorage, current_credit_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::CreditStorage, root_credit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::CreditValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::CreditValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::com::webank::wedpr::asset_hiding::proto::CreditValueDefaultTypeInternal, numerical_value_),
  offsetof(::com::webank::wedpr::asset_hiding::proto::CreditValueDefaultTypeInternal, string_value_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::CreditValue, credit_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::CreditSecret, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::CreditSecret, credit_value_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::CreditSecret, secret_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::CreditCredential, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::CreditCredential, credit_storage_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::CreditCredential, credit_secret_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::SignatureInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::SignatureInfo, public_key_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::SignatureInfo, signature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::TransactionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::TransactionInfo, credit_value_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::TransactionInfo, transaction_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::RegulationInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::RegulationInfo, transaction_info_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::RegulationInfo, credit_credential_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::RawCreditSecret, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::RawCreditSecret, credit_secret_),
  PROTOBUF_FIELD_OFFSET(::com::webank::wedpr::asset_hiding::proto::RawCreditSecret, secret_uuid_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::webank::wedpr::asset_hiding::proto::HiddenCredit)},
  { 7, -1, sizeof(::com::webank::wedpr::asset_hiding::proto::CreditStorage)},
  { 16, -1, sizeof(::com::webank::wedpr::asset_hiding::proto::CreditValue)},
  { 24, -1, sizeof(::com::webank::wedpr::asset_hiding::proto::CreditSecret)},
  { 31, -1, sizeof(::com::webank::wedpr::asset_hiding::proto::CreditCredential)},
  { 38, -1, sizeof(::com::webank::wedpr::asset_hiding::proto::SignatureInfo)},
  { 45, -1, sizeof(::com::webank::wedpr::asset_hiding::proto::TransactionInfo)},
  { 52, -1, sizeof(::com::webank::wedpr::asset_hiding::proto::RegulationInfo)},
  { 59, -1, sizeof(::com::webank::wedpr::asset_hiding::proto::RawCreditSecret)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::webank::wedpr::asset_hiding::proto::_HiddenCredit_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::webank::wedpr::asset_hiding::proto::_CreditStorage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::webank::wedpr::asset_hiding::proto::_CreditValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::webank::wedpr::asset_hiding::proto::_CreditSecret_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::webank::wedpr::asset_hiding::proto::_CreditCredential_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::webank::wedpr::asset_hiding::proto::_SignatureInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::webank::wedpr::asset_hiding::proto::_TransactionInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::webank::wedpr::asset_hiding::proto::_RegulationInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::webank::wedpr::asset_hiding::proto::_RawCreditSecret_default_instance_),
};

const char descriptor_table_protodef_common_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014common.proto\022#com.webank.wedpr.asset_h"
  "iding.proto\";\n\014HiddenCredit\022\022\n\ncommitmen"
  "t\030\001 \001(\t\022\027\n\017commitment_uuid\030\002 \001(\t\"\201\002\n\rCre"
  "ditStorage\022J\n\016signature_info\030\001 \001(\01322.com"
  ".webank.wedpr.asset_hiding.proto.Signatu"
  "reInfo\022\021\n\ttimestamp\030\002 \001(\t\022I\n\016current_cre"
  "dit\030\003 \001(\01321.com.webank.wedpr.asset_hidin"
  "g.proto.HiddenCredit\022F\n\013root_credit\030\004 \001("
  "\01321.com.webank.wedpr.asset_hiding.proto."
  "HiddenCredit\"P\n\013CreditValue\022\031\n\017numerical"
  "_value\030\001 \001(\003H\000\022\026\n\014string_value\030\002 \001(\tH\000B\016"
  "\n\014credit_value\"f\n\014CreditSecret\022F\n\014credit"
  "_value\030\001 \001(\01320.com.webank.wedpr.asset_hi"
  "ding.proto.CreditValue\022\016\n\006secret\030\002 \001(\t\"\250"
  "\001\n\020CreditCredential\022J\n\016credit_storage\030\001 "
  "\001(\01322.com.webank.wedpr.asset_hiding.prot"
  "o.CreditStorage\022H\n\rcredit_secret\030\002 \001(\01321"
  ".com.webank.wedpr.asset_hiding.proto.Cre"
  "ditSecret\"6\n\rSignatureInfo\022\022\n\npublic_key"
  "\030\001 \001(\t\022\021\n\tsignature\030\002 \001(\t\"v\n\017Transaction"
  "Info\022F\n\014credit_value\030\001 \001(\01320.com.webank."
  "wedpr.asset_hiding.proto.CreditValue\022\033\n\023"
  "transaction_message\030\002 \001(\t\"\262\001\n\016Regulation"
  "Info\022N\n\020transaction_info\030\001 \003(\01324.com.web"
  "ank.wedpr.asset_hiding.proto.Transaction"
  "Info\022P\n\021credit_credential\030\002 \003(\01325.com.we"
  "bank.wedpr.asset_hiding.proto.CreditCred"
  "ential\"p\n\017RawCreditSecret\022H\n\rcredit_secr"
  "et\030\001 \001(\01321.com.webank.wedpr.asset_hiding"
  ".proto.CreditSecret\022\023\n\013secret_uuid\030\002 \001(\t"
  "b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_common_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_common_2eproto_sccs[9] = {
  &scc_info_CreditCredential_common_2eproto.base,
  &scc_info_CreditSecret_common_2eproto.base,
  &scc_info_CreditStorage_common_2eproto.base,
  &scc_info_CreditValue_common_2eproto.base,
  &scc_info_HiddenCredit_common_2eproto.base,
  &scc_info_RawCreditSecret_common_2eproto.base,
  &scc_info_RegulationInfo_common_2eproto.base,
  &scc_info_SignatureInfo_common_2eproto.base,
  &scc_info_TransactionInfo_common_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_common_2eproto_once;
static bool descriptor_table_common_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_common_2eproto = {
  &descriptor_table_common_2eproto_initialized, descriptor_table_protodef_common_2eproto, "common.proto", 1208,
  &descriptor_table_common_2eproto_once, descriptor_table_common_2eproto_sccs, descriptor_table_common_2eproto_deps, 9, 0,
  schemas, file_default_instances, TableStruct_common_2eproto::offsets,
  file_level_metadata_common_2eproto, 9, file_level_enum_descriptors_common_2eproto, file_level_service_descriptors_common_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_common_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_common_2eproto), true);
namespace com {
namespace webank {
namespace wedpr {
namespace asset_hiding {
namespace proto {

// ===================================================================

void HiddenCredit::InitAsDefaultInstance() {
}
class HiddenCredit::_Internal {
 public:
};

HiddenCredit::HiddenCredit()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.webank.wedpr.asset_hiding.proto.HiddenCredit)
}
HiddenCredit::HiddenCredit(const HiddenCredit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  commitment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.commitment().empty()) {
    commitment_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.commitment_);
  }
  commitment_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.commitment_uuid().empty()) {
    commitment_uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.commitment_uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:com.webank.wedpr.asset_hiding.proto.HiddenCredit)
}

void HiddenCredit::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HiddenCredit_common_2eproto.base);
  commitment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  commitment_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

HiddenCredit::~HiddenCredit() {
  // @@protoc_insertion_point(destructor:com.webank.wedpr.asset_hiding.proto.HiddenCredit)
  SharedDtor();
}

void HiddenCredit::SharedDtor() {
  commitment_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  commitment_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void HiddenCredit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HiddenCredit& HiddenCredit::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HiddenCredit_common_2eproto.base);
  return *internal_default_instance();
}


void HiddenCredit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.webank.wedpr.asset_hiding.proto.HiddenCredit)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  commitment_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  commitment_uuid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HiddenCredit::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string commitment = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_commitment(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.HiddenCredit.commitment");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string commitment_uuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_commitment_uuid(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.HiddenCredit.commitment_uuid");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HiddenCredit::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.webank.wedpr.asset_hiding.proto.HiddenCredit)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string commitment = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_commitment()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->commitment().data(), static_cast<int>(this->commitment().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.HiddenCredit.commitment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string commitment_uuid = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_commitment_uuid()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->commitment_uuid().data(), static_cast<int>(this->commitment_uuid().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.HiddenCredit.commitment_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.webank.wedpr.asset_hiding.proto.HiddenCredit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.webank.wedpr.asset_hiding.proto.HiddenCredit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HiddenCredit::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.webank.wedpr.asset_hiding.proto.HiddenCredit)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string commitment = 1;
  if (this->commitment().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->commitment().data(), static_cast<int>(this->commitment().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.HiddenCredit.commitment");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->commitment(), output);
  }

  // string commitment_uuid = 2;
  if (this->commitment_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->commitment_uuid().data(), static_cast<int>(this->commitment_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.HiddenCredit.commitment_uuid");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->commitment_uuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.webank.wedpr.asset_hiding.proto.HiddenCredit)
}

::PROTOBUF_NAMESPACE_ID::uint8* HiddenCredit::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.webank.wedpr.asset_hiding.proto.HiddenCredit)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string commitment = 1;
  if (this->commitment().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->commitment().data(), static_cast<int>(this->commitment().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.HiddenCredit.commitment");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->commitment(), target);
  }

  // string commitment_uuid = 2;
  if (this->commitment_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->commitment_uuid().data(), static_cast<int>(this->commitment_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.HiddenCredit.commitment_uuid");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->commitment_uuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.webank.wedpr.asset_hiding.proto.HiddenCredit)
  return target;
}

size_t HiddenCredit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.webank.wedpr.asset_hiding.proto.HiddenCredit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string commitment = 1;
  if (this->commitment().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->commitment());
  }

  // string commitment_uuid = 2;
  if (this->commitment_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->commitment_uuid());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HiddenCredit::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.webank.wedpr.asset_hiding.proto.HiddenCredit)
  GOOGLE_DCHECK_NE(&from, this);
  const HiddenCredit* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HiddenCredit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.webank.wedpr.asset_hiding.proto.HiddenCredit)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.webank.wedpr.asset_hiding.proto.HiddenCredit)
    MergeFrom(*source);
  }
}

void HiddenCredit::MergeFrom(const HiddenCredit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.webank.wedpr.asset_hiding.proto.HiddenCredit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.commitment().size() > 0) {

    commitment_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.commitment_);
  }
  if (from.commitment_uuid().size() > 0) {

    commitment_uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.commitment_uuid_);
  }
}

void HiddenCredit::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.webank.wedpr.asset_hiding.proto.HiddenCredit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HiddenCredit::CopyFrom(const HiddenCredit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.webank.wedpr.asset_hiding.proto.HiddenCredit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HiddenCredit::IsInitialized() const {
  return true;
}

void HiddenCredit::InternalSwap(HiddenCredit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  commitment_.Swap(&other->commitment_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  commitment_uuid_.Swap(&other->commitment_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata HiddenCredit::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreditStorage::InitAsDefaultInstance() {
  ::com::webank::wedpr::asset_hiding::proto::_CreditStorage_default_instance_._instance.get_mutable()->signature_info_ = const_cast< ::com::webank::wedpr::asset_hiding::proto::SignatureInfo*>(
      ::com::webank::wedpr::asset_hiding::proto::SignatureInfo::internal_default_instance());
  ::com::webank::wedpr::asset_hiding::proto::_CreditStorage_default_instance_._instance.get_mutable()->current_credit_ = const_cast< ::com::webank::wedpr::asset_hiding::proto::HiddenCredit*>(
      ::com::webank::wedpr::asset_hiding::proto::HiddenCredit::internal_default_instance());
  ::com::webank::wedpr::asset_hiding::proto::_CreditStorage_default_instance_._instance.get_mutable()->root_credit_ = const_cast< ::com::webank::wedpr::asset_hiding::proto::HiddenCredit*>(
      ::com::webank::wedpr::asset_hiding::proto::HiddenCredit::internal_default_instance());
}
class CreditStorage::_Internal {
 public:
  static const ::com::webank::wedpr::asset_hiding::proto::SignatureInfo& signature_info(const CreditStorage* msg);
  static const ::com::webank::wedpr::asset_hiding::proto::HiddenCredit& current_credit(const CreditStorage* msg);
  static const ::com::webank::wedpr::asset_hiding::proto::HiddenCredit& root_credit(const CreditStorage* msg);
};

const ::com::webank::wedpr::asset_hiding::proto::SignatureInfo&
CreditStorage::_Internal::signature_info(const CreditStorage* msg) {
  return *msg->signature_info_;
}
const ::com::webank::wedpr::asset_hiding::proto::HiddenCredit&
CreditStorage::_Internal::current_credit(const CreditStorage* msg) {
  return *msg->current_credit_;
}
const ::com::webank::wedpr::asset_hiding::proto::HiddenCredit&
CreditStorage::_Internal::root_credit(const CreditStorage* msg) {
  return *msg->root_credit_;
}
CreditStorage::CreditStorage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.webank.wedpr.asset_hiding.proto.CreditStorage)
}
CreditStorage::CreditStorage(const CreditStorage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.timestamp().empty()) {
    timestamp_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
  }
  if (from.has_signature_info()) {
    signature_info_ = new ::com::webank::wedpr::asset_hiding::proto::SignatureInfo(*from.signature_info_);
  } else {
    signature_info_ = nullptr;
  }
  if (from.has_current_credit()) {
    current_credit_ = new ::com::webank::wedpr::asset_hiding::proto::HiddenCredit(*from.current_credit_);
  } else {
    current_credit_ = nullptr;
  }
  if (from.has_root_credit()) {
    root_credit_ = new ::com::webank::wedpr::asset_hiding::proto::HiddenCredit(*from.root_credit_);
  } else {
    root_credit_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.webank.wedpr.asset_hiding.proto.CreditStorage)
}

void CreditStorage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreditStorage_common_2eproto.base);
  timestamp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&signature_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&root_credit_) -
      reinterpret_cast<char*>(&signature_info_)) + sizeof(root_credit_));
}

CreditStorage::~CreditStorage() {
  // @@protoc_insertion_point(destructor:com.webank.wedpr.asset_hiding.proto.CreditStorage)
  SharedDtor();
}

void CreditStorage::SharedDtor() {
  timestamp_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete signature_info_;
  if (this != internal_default_instance()) delete current_credit_;
  if (this != internal_default_instance()) delete root_credit_;
}

void CreditStorage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreditStorage& CreditStorage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreditStorage_common_2eproto.base);
  return *internal_default_instance();
}


void CreditStorage::Clear() {
// @@protoc_insertion_point(message_clear_start:com.webank.wedpr.asset_hiding.proto.CreditStorage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timestamp_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && signature_info_ != nullptr) {
    delete signature_info_;
  }
  signature_info_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && current_credit_ != nullptr) {
    delete current_credit_;
  }
  current_credit_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && root_credit_ != nullptr) {
    delete root_credit_;
  }
  root_credit_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreditStorage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.webank.wedpr.asset_hiding.proto.SignatureInfo signature_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_signature_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_timestamp(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.CreditStorage.timestamp");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.webank.wedpr.asset_hiding.proto.HiddenCredit current_credit = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_current_credit(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.webank.wedpr.asset_hiding.proto.HiddenCredit root_credit = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_root_credit(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreditStorage::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.webank.wedpr.asset_hiding.proto.CreditStorage)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.webank.wedpr.asset_hiding.proto.SignatureInfo signature_info = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_signature_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string timestamp = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_timestamp()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->timestamp().data(), static_cast<int>(this->timestamp().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.CreditStorage.timestamp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.webank.wedpr.asset_hiding.proto.HiddenCredit current_credit = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_current_credit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.webank.wedpr.asset_hiding.proto.HiddenCredit root_credit = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_root_credit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.webank.wedpr.asset_hiding.proto.CreditStorage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.webank.wedpr.asset_hiding.proto.CreditStorage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreditStorage::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.webank.wedpr.asset_hiding.proto.CreditStorage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.SignatureInfo signature_info = 1;
  if (this->has_signature_info()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::signature_info(this), output);
  }

  // string timestamp = 2;
  if (this->timestamp().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->timestamp().data(), static_cast<int>(this->timestamp().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.CreditStorage.timestamp");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->timestamp(), output);
  }

  // .com.webank.wedpr.asset_hiding.proto.HiddenCredit current_credit = 3;
  if (this->has_current_credit()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::current_credit(this), output);
  }

  // .com.webank.wedpr.asset_hiding.proto.HiddenCredit root_credit = 4;
  if (this->has_root_credit()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, _Internal::root_credit(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.webank.wedpr.asset_hiding.proto.CreditStorage)
}

::PROTOBUF_NAMESPACE_ID::uint8* CreditStorage::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.webank.wedpr.asset_hiding.proto.CreditStorage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.SignatureInfo signature_info = 1;
  if (this->has_signature_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::signature_info(this), target);
  }

  // string timestamp = 2;
  if (this->timestamp().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->timestamp().data(), static_cast<int>(this->timestamp().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.CreditStorage.timestamp");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->timestamp(), target);
  }

  // .com.webank.wedpr.asset_hiding.proto.HiddenCredit current_credit = 3;
  if (this->has_current_credit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::current_credit(this), target);
  }

  // .com.webank.wedpr.asset_hiding.proto.HiddenCredit root_credit = 4;
  if (this->has_root_credit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::root_credit(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.webank.wedpr.asset_hiding.proto.CreditStorage)
  return target;
}

size_t CreditStorage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.webank.wedpr.asset_hiding.proto.CreditStorage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string timestamp = 2;
  if (this->timestamp().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->timestamp());
  }

  // .com.webank.wedpr.asset_hiding.proto.SignatureInfo signature_info = 1;
  if (this->has_signature_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *signature_info_);
  }

  // .com.webank.wedpr.asset_hiding.proto.HiddenCredit current_credit = 3;
  if (this->has_current_credit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *current_credit_);
  }

  // .com.webank.wedpr.asset_hiding.proto.HiddenCredit root_credit = 4;
  if (this->has_root_credit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *root_credit_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreditStorage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.webank.wedpr.asset_hiding.proto.CreditStorage)
  GOOGLE_DCHECK_NE(&from, this);
  const CreditStorage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreditStorage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.webank.wedpr.asset_hiding.proto.CreditStorage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.webank.wedpr.asset_hiding.proto.CreditStorage)
    MergeFrom(*source);
  }
}

void CreditStorage::MergeFrom(const CreditStorage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.webank.wedpr.asset_hiding.proto.CreditStorage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timestamp().size() > 0) {

    timestamp_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
  }
  if (from.has_signature_info()) {
    mutable_signature_info()->::com::webank::wedpr::asset_hiding::proto::SignatureInfo::MergeFrom(from.signature_info());
  }
  if (from.has_current_credit()) {
    mutable_current_credit()->::com::webank::wedpr::asset_hiding::proto::HiddenCredit::MergeFrom(from.current_credit());
  }
  if (from.has_root_credit()) {
    mutable_root_credit()->::com::webank::wedpr::asset_hiding::proto::HiddenCredit::MergeFrom(from.root_credit());
  }
}

void CreditStorage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.webank.wedpr.asset_hiding.proto.CreditStorage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreditStorage::CopyFrom(const CreditStorage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.webank.wedpr.asset_hiding.proto.CreditStorage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreditStorage::IsInitialized() const {
  return true;
}

void CreditStorage::InternalSwap(CreditStorage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  timestamp_.Swap(&other->timestamp_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(signature_info_, other->signature_info_);
  swap(current_credit_, other->current_credit_);
  swap(root_credit_, other->root_credit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreditStorage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreditValue::InitAsDefaultInstance() {
  ::com::webank::wedpr::asset_hiding::proto::_CreditValue_default_instance_.numerical_value_ = PROTOBUF_LONGLONG(0);
  ::com::webank::wedpr::asset_hiding::proto::_CreditValue_default_instance_.string_value_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
class CreditValue::_Internal {
 public:
};

CreditValue::CreditValue()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.webank.wedpr.asset_hiding.proto.CreditValue)
}
CreditValue::CreditValue(const CreditValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_credit_value();
  switch (from.credit_value_case()) {
    case kNumericalValue: {
      set_numerical_value(from.numerical_value());
      break;
    }
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case CREDIT_VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.webank.wedpr.asset_hiding.proto.CreditValue)
}

void CreditValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreditValue_common_2eproto.base);
  clear_has_credit_value();
}

CreditValue::~CreditValue() {
  // @@protoc_insertion_point(destructor:com.webank.wedpr.asset_hiding.proto.CreditValue)
  SharedDtor();
}

void CreditValue::SharedDtor() {
  if (has_credit_value()) {
    clear_credit_value();
  }
}

void CreditValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreditValue& CreditValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreditValue_common_2eproto.base);
  return *internal_default_instance();
}


void CreditValue::clear_credit_value() {
// @@protoc_insertion_point(one_of_clear_start:com.webank.wedpr.asset_hiding.proto.CreditValue)
  switch (credit_value_case()) {
    case kNumericalValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      credit_value_.string_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case CREDIT_VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CREDIT_VALUE_NOT_SET;
}


void CreditValue::Clear() {
// @@protoc_insertion_point(message_clear_start:com.webank.wedpr.asset_hiding.proto.CreditValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_credit_value();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreditValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 numerical_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          set_numerical_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string string_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_string_value(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.CreditValue.string_value");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreditValue::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.webank.wedpr.asset_hiding.proto.CreditValue)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 numerical_value = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          clear_credit_value();
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &credit_value_.numerical_value_)));
          set_has_numerical_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string string_value = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->string_value().data(), static_cast<int>(this->string_value().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.CreditValue.string_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.webank.wedpr.asset_hiding.proto.CreditValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.webank.wedpr.asset_hiding.proto.CreditValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreditValue::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.webank.wedpr.asset_hiding.proto.CreditValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 numerical_value = 1;
  if (has_numerical_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(1, this->numerical_value(), output);
  }

  // string string_value = 2;
  if (has_string_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.CreditValue.string_value");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->string_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.webank.wedpr.asset_hiding.proto.CreditValue)
}

::PROTOBUF_NAMESPACE_ID::uint8* CreditValue::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.webank.wedpr.asset_hiding.proto.CreditValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 numerical_value = 1;
  if (has_numerical_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->numerical_value(), target);
  }

  // string string_value = 2;
  if (has_string_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.CreditValue.string_value");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->string_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.webank.wedpr.asset_hiding.proto.CreditValue)
  return target;
}

size_t CreditValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.webank.wedpr.asset_hiding.proto.CreditValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (credit_value_case()) {
    // int64 numerical_value = 1;
    case kNumericalValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->numerical_value());
      break;
    }
    // string string_value = 2;
    case kStringValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->string_value());
      break;
    }
    case CREDIT_VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreditValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.webank.wedpr.asset_hiding.proto.CreditValue)
  GOOGLE_DCHECK_NE(&from, this);
  const CreditValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreditValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.webank.wedpr.asset_hiding.proto.CreditValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.webank.wedpr.asset_hiding.proto.CreditValue)
    MergeFrom(*source);
  }
}

void CreditValue::MergeFrom(const CreditValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.webank.wedpr.asset_hiding.proto.CreditValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.credit_value_case()) {
    case kNumericalValue: {
      set_numerical_value(from.numerical_value());
      break;
    }
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case CREDIT_VALUE_NOT_SET: {
      break;
    }
  }
}

void CreditValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.webank.wedpr.asset_hiding.proto.CreditValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreditValue::CopyFrom(const CreditValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.webank.wedpr.asset_hiding.proto.CreditValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreditValue::IsInitialized() const {
  return true;
}

void CreditValue::InternalSwap(CreditValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(credit_value_, other->credit_value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreditValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreditSecret::InitAsDefaultInstance() {
  ::com::webank::wedpr::asset_hiding::proto::_CreditSecret_default_instance_._instance.get_mutable()->credit_value_ = const_cast< ::com::webank::wedpr::asset_hiding::proto::CreditValue*>(
      ::com::webank::wedpr::asset_hiding::proto::CreditValue::internal_default_instance());
}
class CreditSecret::_Internal {
 public:
  static const ::com::webank::wedpr::asset_hiding::proto::CreditValue& credit_value(const CreditSecret* msg);
};

const ::com::webank::wedpr::asset_hiding::proto::CreditValue&
CreditSecret::_Internal::credit_value(const CreditSecret* msg) {
  return *msg->credit_value_;
}
CreditSecret::CreditSecret()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.webank.wedpr.asset_hiding.proto.CreditSecret)
}
CreditSecret::CreditSecret(const CreditSecret& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.secret().empty()) {
    secret_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.has_credit_value()) {
    credit_value_ = new ::com::webank::wedpr::asset_hiding::proto::CreditValue(*from.credit_value_);
  } else {
    credit_value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.webank.wedpr.asset_hiding.proto.CreditSecret)
}

void CreditSecret::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreditSecret_common_2eproto.base);
  secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  credit_value_ = nullptr;
}

CreditSecret::~CreditSecret() {
  // @@protoc_insertion_point(destructor:com.webank.wedpr.asset_hiding.proto.CreditSecret)
  SharedDtor();
}

void CreditSecret::SharedDtor() {
  secret_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete credit_value_;
}

void CreditSecret::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreditSecret& CreditSecret::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreditSecret_common_2eproto.base);
  return *internal_default_instance();
}


void CreditSecret::Clear() {
// @@protoc_insertion_point(message_clear_start:com.webank.wedpr.asset_hiding.proto.CreditSecret)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  secret_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && credit_value_ != nullptr) {
    delete credit_value_;
  }
  credit_value_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreditSecret::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.webank.wedpr.asset_hiding.proto.CreditValue credit_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_credit_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string secret = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_secret(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.CreditSecret.secret");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreditSecret::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.webank.wedpr.asset_hiding.proto.CreditSecret)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.webank.wedpr.asset_hiding.proto.CreditValue credit_value = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_credit_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string secret = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_secret()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->secret().data(), static_cast<int>(this->secret().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.CreditSecret.secret"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.webank.wedpr.asset_hiding.proto.CreditSecret)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.webank.wedpr.asset_hiding.proto.CreditSecret)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreditSecret::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.webank.wedpr.asset_hiding.proto.CreditSecret)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditValue credit_value = 1;
  if (this->has_credit_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::credit_value(this), output);
  }

  // string secret = 2;
  if (this->secret().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->secret().data(), static_cast<int>(this->secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.CreditSecret.secret");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->secret(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.webank.wedpr.asset_hiding.proto.CreditSecret)
}

::PROTOBUF_NAMESPACE_ID::uint8* CreditSecret::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.webank.wedpr.asset_hiding.proto.CreditSecret)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditValue credit_value = 1;
  if (this->has_credit_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::credit_value(this), target);
  }

  // string secret = 2;
  if (this->secret().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->secret().data(), static_cast<int>(this->secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.CreditSecret.secret");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->secret(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.webank.wedpr.asset_hiding.proto.CreditSecret)
  return target;
}

size_t CreditSecret::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.webank.wedpr.asset_hiding.proto.CreditSecret)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string secret = 2;
  if (this->secret().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->secret());
  }

  // .com.webank.wedpr.asset_hiding.proto.CreditValue credit_value = 1;
  if (this->has_credit_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *credit_value_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreditSecret::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.webank.wedpr.asset_hiding.proto.CreditSecret)
  GOOGLE_DCHECK_NE(&from, this);
  const CreditSecret* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreditSecret>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.webank.wedpr.asset_hiding.proto.CreditSecret)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.webank.wedpr.asset_hiding.proto.CreditSecret)
    MergeFrom(*source);
  }
}

void CreditSecret::MergeFrom(const CreditSecret& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.webank.wedpr.asset_hiding.proto.CreditSecret)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.secret().size() > 0) {

    secret_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.has_credit_value()) {
    mutable_credit_value()->::com::webank::wedpr::asset_hiding::proto::CreditValue::MergeFrom(from.credit_value());
  }
}

void CreditSecret::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.webank.wedpr.asset_hiding.proto.CreditSecret)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreditSecret::CopyFrom(const CreditSecret& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.webank.wedpr.asset_hiding.proto.CreditSecret)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreditSecret::IsInitialized() const {
  return true;
}

void CreditSecret::InternalSwap(CreditSecret* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  secret_.Swap(&other->secret_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(credit_value_, other->credit_value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreditSecret::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreditCredential::InitAsDefaultInstance() {
  ::com::webank::wedpr::asset_hiding::proto::_CreditCredential_default_instance_._instance.get_mutable()->credit_storage_ = const_cast< ::com::webank::wedpr::asset_hiding::proto::CreditStorage*>(
      ::com::webank::wedpr::asset_hiding::proto::CreditStorage::internal_default_instance());
  ::com::webank::wedpr::asset_hiding::proto::_CreditCredential_default_instance_._instance.get_mutable()->credit_secret_ = const_cast< ::com::webank::wedpr::asset_hiding::proto::CreditSecret*>(
      ::com::webank::wedpr::asset_hiding::proto::CreditSecret::internal_default_instance());
}
class CreditCredential::_Internal {
 public:
  static const ::com::webank::wedpr::asset_hiding::proto::CreditStorage& credit_storage(const CreditCredential* msg);
  static const ::com::webank::wedpr::asset_hiding::proto::CreditSecret& credit_secret(const CreditCredential* msg);
};

const ::com::webank::wedpr::asset_hiding::proto::CreditStorage&
CreditCredential::_Internal::credit_storage(const CreditCredential* msg) {
  return *msg->credit_storage_;
}
const ::com::webank::wedpr::asset_hiding::proto::CreditSecret&
CreditCredential::_Internal::credit_secret(const CreditCredential* msg) {
  return *msg->credit_secret_;
}
CreditCredential::CreditCredential()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.webank.wedpr.asset_hiding.proto.CreditCredential)
}
CreditCredential::CreditCredential(const CreditCredential& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_credit_storage()) {
    credit_storage_ = new ::com::webank::wedpr::asset_hiding::proto::CreditStorage(*from.credit_storage_);
  } else {
    credit_storage_ = nullptr;
  }
  if (from.has_credit_secret()) {
    credit_secret_ = new ::com::webank::wedpr::asset_hiding::proto::CreditSecret(*from.credit_secret_);
  } else {
    credit_secret_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.webank.wedpr.asset_hiding.proto.CreditCredential)
}

void CreditCredential::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreditCredential_common_2eproto.base);
  ::memset(&credit_storage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&credit_secret_) -
      reinterpret_cast<char*>(&credit_storage_)) + sizeof(credit_secret_));
}

CreditCredential::~CreditCredential() {
  // @@protoc_insertion_point(destructor:com.webank.wedpr.asset_hiding.proto.CreditCredential)
  SharedDtor();
}

void CreditCredential::SharedDtor() {
  if (this != internal_default_instance()) delete credit_storage_;
  if (this != internal_default_instance()) delete credit_secret_;
}

void CreditCredential::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreditCredential& CreditCredential::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreditCredential_common_2eproto.base);
  return *internal_default_instance();
}


void CreditCredential::Clear() {
// @@protoc_insertion_point(message_clear_start:com.webank.wedpr.asset_hiding.proto.CreditCredential)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && credit_storage_ != nullptr) {
    delete credit_storage_;
  }
  credit_storage_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && credit_secret_ != nullptr) {
    delete credit_secret_;
  }
  credit_secret_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreditCredential::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_credit_storage(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.webank.wedpr.asset_hiding.proto.CreditSecret credit_secret = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_credit_secret(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreditCredential::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.webank.wedpr.asset_hiding.proto.CreditCredential)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_credit_storage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.webank.wedpr.asset_hiding.proto.CreditSecret credit_secret = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_credit_secret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.webank.wedpr.asset_hiding.proto.CreditCredential)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.webank.wedpr.asset_hiding.proto.CreditCredential)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreditCredential::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.webank.wedpr.asset_hiding.proto.CreditCredential)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
  if (this->has_credit_storage()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::credit_storage(this), output);
  }

  // .com.webank.wedpr.asset_hiding.proto.CreditSecret credit_secret = 2;
  if (this->has_credit_secret()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::credit_secret(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.webank.wedpr.asset_hiding.proto.CreditCredential)
}

::PROTOBUF_NAMESPACE_ID::uint8* CreditCredential::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.webank.wedpr.asset_hiding.proto.CreditCredential)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
  if (this->has_credit_storage()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::credit_storage(this), target);
  }

  // .com.webank.wedpr.asset_hiding.proto.CreditSecret credit_secret = 2;
  if (this->has_credit_secret()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::credit_secret(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.webank.wedpr.asset_hiding.proto.CreditCredential)
  return target;
}

size_t CreditCredential::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.webank.wedpr.asset_hiding.proto.CreditCredential)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditStorage credit_storage = 1;
  if (this->has_credit_storage()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *credit_storage_);
  }

  // .com.webank.wedpr.asset_hiding.proto.CreditSecret credit_secret = 2;
  if (this->has_credit_secret()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *credit_secret_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreditCredential::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.webank.wedpr.asset_hiding.proto.CreditCredential)
  GOOGLE_DCHECK_NE(&from, this);
  const CreditCredential* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreditCredential>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.webank.wedpr.asset_hiding.proto.CreditCredential)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.webank.wedpr.asset_hiding.proto.CreditCredential)
    MergeFrom(*source);
  }
}

void CreditCredential::MergeFrom(const CreditCredential& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.webank.wedpr.asset_hiding.proto.CreditCredential)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_credit_storage()) {
    mutable_credit_storage()->::com::webank::wedpr::asset_hiding::proto::CreditStorage::MergeFrom(from.credit_storage());
  }
  if (from.has_credit_secret()) {
    mutable_credit_secret()->::com::webank::wedpr::asset_hiding::proto::CreditSecret::MergeFrom(from.credit_secret());
  }
}

void CreditCredential::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.webank.wedpr.asset_hiding.proto.CreditCredential)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreditCredential::CopyFrom(const CreditCredential& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.webank.wedpr.asset_hiding.proto.CreditCredential)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreditCredential::IsInitialized() const {
  return true;
}

void CreditCredential::InternalSwap(CreditCredential* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(credit_storage_, other->credit_storage_);
  swap(credit_secret_, other->credit_secret_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreditCredential::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SignatureInfo::InitAsDefaultInstance() {
}
class SignatureInfo::_Internal {
 public:
};

SignatureInfo::SignatureInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.webank.wedpr.asset_hiding.proto.SignatureInfo)
}
SignatureInfo::SignatureInfo(const SignatureInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.public_key().empty()) {
    public_key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.signature().empty()) {
    signature_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  // @@protoc_insertion_point(copy_constructor:com.webank.wedpr.asset_hiding.proto.SignatureInfo)
}

void SignatureInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SignatureInfo_common_2eproto.base);
  public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SignatureInfo::~SignatureInfo() {
  // @@protoc_insertion_point(destructor:com.webank.wedpr.asset_hiding.proto.SignatureInfo)
  SharedDtor();
}

void SignatureInfo::SharedDtor() {
  public_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SignatureInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignatureInfo& SignatureInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SignatureInfo_common_2eproto.base);
  return *internal_default_instance();
}


void SignatureInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.webank.wedpr.asset_hiding.proto.SignatureInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  public_key_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  signature_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SignatureInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string public_key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_public_key(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.SignatureInfo.public_key");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string signature = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_signature(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.SignatureInfo.signature");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SignatureInfo::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.webank.wedpr.asset_hiding.proto.SignatureInfo)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string public_key = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->public_key().data(), static_cast<int>(this->public_key().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.SignatureInfo.public_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string signature = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), static_cast<int>(this->signature().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.SignatureInfo.signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.webank.wedpr.asset_hiding.proto.SignatureInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.webank.wedpr.asset_hiding.proto.SignatureInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SignatureInfo::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.webank.wedpr.asset_hiding.proto.SignatureInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string public_key = 1;
  if (this->public_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.SignatureInfo.public_key");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->public_key(), output);
  }

  // string signature = 2;
  if (this->signature().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.SignatureInfo.signature");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.webank.wedpr.asset_hiding.proto.SignatureInfo)
}

::PROTOBUF_NAMESPACE_ID::uint8* SignatureInfo::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.webank.wedpr.asset_hiding.proto.SignatureInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string public_key = 1;
  if (this->public_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.SignatureInfo.public_key");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->public_key(), target);
  }

  // string signature = 2;
  if (this->signature().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.SignatureInfo.signature");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->signature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.webank.wedpr.asset_hiding.proto.SignatureInfo)
  return target;
}

size_t SignatureInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.webank.wedpr.asset_hiding.proto.SignatureInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string public_key = 1;
  if (this->public_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->public_key());
  }

  // string signature = 2;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->signature());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignatureInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.webank.wedpr.asset_hiding.proto.SignatureInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SignatureInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SignatureInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.webank.wedpr.asset_hiding.proto.SignatureInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.webank.wedpr.asset_hiding.proto.SignatureInfo)
    MergeFrom(*source);
  }
}

void SignatureInfo::MergeFrom(const SignatureInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.webank.wedpr.asset_hiding.proto.SignatureInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.public_key().size() > 0) {

    public_key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
}

void SignatureInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.webank.wedpr.asset_hiding.proto.SignatureInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignatureInfo::CopyFrom(const SignatureInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.webank.wedpr.asset_hiding.proto.SignatureInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignatureInfo::IsInitialized() const {
  return true;
}

void SignatureInfo::InternalSwap(SignatureInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  public_key_.Swap(&other->public_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signature_.Swap(&other->signature_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata SignatureInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TransactionInfo::InitAsDefaultInstance() {
  ::com::webank::wedpr::asset_hiding::proto::_TransactionInfo_default_instance_._instance.get_mutable()->credit_value_ = const_cast< ::com::webank::wedpr::asset_hiding::proto::CreditValue*>(
      ::com::webank::wedpr::asset_hiding::proto::CreditValue::internal_default_instance());
}
class TransactionInfo::_Internal {
 public:
  static const ::com::webank::wedpr::asset_hiding::proto::CreditValue& credit_value(const TransactionInfo* msg);
};

const ::com::webank::wedpr::asset_hiding::proto::CreditValue&
TransactionInfo::_Internal::credit_value(const TransactionInfo* msg) {
  return *msg->credit_value_;
}
TransactionInfo::TransactionInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.webank.wedpr.asset_hiding.proto.TransactionInfo)
}
TransactionInfo::TransactionInfo(const TransactionInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  transaction_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.transaction_message().empty()) {
    transaction_message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.transaction_message_);
  }
  if (from.has_credit_value()) {
    credit_value_ = new ::com::webank::wedpr::asset_hiding::proto::CreditValue(*from.credit_value_);
  } else {
    credit_value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.webank.wedpr.asset_hiding.proto.TransactionInfo)
}

void TransactionInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TransactionInfo_common_2eproto.base);
  transaction_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  credit_value_ = nullptr;
}

TransactionInfo::~TransactionInfo() {
  // @@protoc_insertion_point(destructor:com.webank.wedpr.asset_hiding.proto.TransactionInfo)
  SharedDtor();
}

void TransactionInfo::SharedDtor() {
  transaction_message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete credit_value_;
}

void TransactionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransactionInfo& TransactionInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TransactionInfo_common_2eproto.base);
  return *internal_default_instance();
}


void TransactionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.webank.wedpr.asset_hiding.proto.TransactionInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && credit_value_ != nullptr) {
    delete credit_value_;
  }
  credit_value_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TransactionInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.webank.wedpr.asset_hiding.proto.CreditValue credit_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_credit_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string transaction_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_transaction_message(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.TransactionInfo.transaction_message");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TransactionInfo::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.webank.wedpr.asset_hiding.proto.TransactionInfo)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.webank.wedpr.asset_hiding.proto.CreditValue credit_value = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_credit_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string transaction_message = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_transaction_message()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->transaction_message().data(), static_cast<int>(this->transaction_message().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.TransactionInfo.transaction_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.webank.wedpr.asset_hiding.proto.TransactionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.webank.wedpr.asset_hiding.proto.TransactionInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TransactionInfo::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.webank.wedpr.asset_hiding.proto.TransactionInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditValue credit_value = 1;
  if (this->has_credit_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::credit_value(this), output);
  }

  // string transaction_message = 2;
  if (this->transaction_message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->transaction_message().data(), static_cast<int>(this->transaction_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.TransactionInfo.transaction_message");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->transaction_message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.webank.wedpr.asset_hiding.proto.TransactionInfo)
}

::PROTOBUF_NAMESPACE_ID::uint8* TransactionInfo::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.webank.wedpr.asset_hiding.proto.TransactionInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditValue credit_value = 1;
  if (this->has_credit_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::credit_value(this), target);
  }

  // string transaction_message = 2;
  if (this->transaction_message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->transaction_message().data(), static_cast<int>(this->transaction_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.TransactionInfo.transaction_message");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->transaction_message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.webank.wedpr.asset_hiding.proto.TransactionInfo)
  return target;
}

size_t TransactionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.webank.wedpr.asset_hiding.proto.TransactionInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string transaction_message = 2;
  if (this->transaction_message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->transaction_message());
  }

  // .com.webank.wedpr.asset_hiding.proto.CreditValue credit_value = 1;
  if (this->has_credit_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *credit_value_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.webank.wedpr.asset_hiding.proto.TransactionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TransactionInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.webank.wedpr.asset_hiding.proto.TransactionInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.webank.wedpr.asset_hiding.proto.TransactionInfo)
    MergeFrom(*source);
  }
}

void TransactionInfo::MergeFrom(const TransactionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.webank.wedpr.asset_hiding.proto.TransactionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.transaction_message().size() > 0) {

    transaction_message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.transaction_message_);
  }
  if (from.has_credit_value()) {
    mutable_credit_value()->::com::webank::wedpr::asset_hiding::proto::CreditValue::MergeFrom(from.credit_value());
  }
}

void TransactionInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.webank.wedpr.asset_hiding.proto.TransactionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionInfo::CopyFrom(const TransactionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.webank.wedpr.asset_hiding.proto.TransactionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionInfo::IsInitialized() const {
  return true;
}

void TransactionInfo::InternalSwap(TransactionInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  transaction_message_.Swap(&other->transaction_message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(credit_value_, other->credit_value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransactionInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegulationInfo::InitAsDefaultInstance() {
}
class RegulationInfo::_Internal {
 public:
};

RegulationInfo::RegulationInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.webank.wedpr.asset_hiding.proto.RegulationInfo)
}
RegulationInfo::RegulationInfo(const RegulationInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      transaction_info_(from.transaction_info_),
      credit_credential_(from.credit_credential_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.webank.wedpr.asset_hiding.proto.RegulationInfo)
}

void RegulationInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegulationInfo_common_2eproto.base);
}

RegulationInfo::~RegulationInfo() {
  // @@protoc_insertion_point(destructor:com.webank.wedpr.asset_hiding.proto.RegulationInfo)
  SharedDtor();
}

void RegulationInfo::SharedDtor() {
}

void RegulationInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegulationInfo& RegulationInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegulationInfo_common_2eproto.base);
  return *internal_default_instance();
}


void RegulationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.webank.wedpr.asset_hiding.proto.RegulationInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_info_.Clear();
  credit_credential_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RegulationInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .com.webank.wedpr.asset_hiding.proto.TransactionInfo transaction_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_transaction_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated .com.webank.wedpr.asset_hiding.proto.CreditCredential credit_credential = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_credit_credential(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RegulationInfo::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.webank.wedpr.asset_hiding.proto.RegulationInfo)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.webank.wedpr.asset_hiding.proto.TransactionInfo transaction_info = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_transaction_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.webank.wedpr.asset_hiding.proto.CreditCredential credit_credential = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_credit_credential()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.webank.wedpr.asset_hiding.proto.RegulationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.webank.wedpr.asset_hiding.proto.RegulationInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RegulationInfo::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.webank.wedpr.asset_hiding.proto.RegulationInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.webank.wedpr.asset_hiding.proto.TransactionInfo transaction_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transaction_info_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->transaction_info(static_cast<int>(i)),
      output);
  }

  // repeated .com.webank.wedpr.asset_hiding.proto.CreditCredential credit_credential = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->credit_credential_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->credit_credential(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.webank.wedpr.asset_hiding.proto.RegulationInfo)
}

::PROTOBUF_NAMESPACE_ID::uint8* RegulationInfo::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.webank.wedpr.asset_hiding.proto.RegulationInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.webank.wedpr.asset_hiding.proto.TransactionInfo transaction_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transaction_info_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->transaction_info(static_cast<int>(i)), target);
  }

  // repeated .com.webank.wedpr.asset_hiding.proto.CreditCredential credit_credential = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->credit_credential_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->credit_credential(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.webank.wedpr.asset_hiding.proto.RegulationInfo)
  return target;
}

size_t RegulationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.webank.wedpr.asset_hiding.proto.RegulationInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.webank.wedpr.asset_hiding.proto.TransactionInfo transaction_info = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->transaction_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->transaction_info(static_cast<int>(i)));
    }
  }

  // repeated .com.webank.wedpr.asset_hiding.proto.CreditCredential credit_credential = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->credit_credential_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->credit_credential(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegulationInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.webank.wedpr.asset_hiding.proto.RegulationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RegulationInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegulationInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.webank.wedpr.asset_hiding.proto.RegulationInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.webank.wedpr.asset_hiding.proto.RegulationInfo)
    MergeFrom(*source);
  }
}

void RegulationInfo::MergeFrom(const RegulationInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.webank.wedpr.asset_hiding.proto.RegulationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transaction_info_.MergeFrom(from.transaction_info_);
  credit_credential_.MergeFrom(from.credit_credential_);
}

void RegulationInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.webank.wedpr.asset_hiding.proto.RegulationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegulationInfo::CopyFrom(const RegulationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.webank.wedpr.asset_hiding.proto.RegulationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegulationInfo::IsInitialized() const {
  return true;
}

void RegulationInfo::InternalSwap(RegulationInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&transaction_info_)->InternalSwap(CastToBase(&other->transaction_info_));
  CastToBase(&credit_credential_)->InternalSwap(CastToBase(&other->credit_credential_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RegulationInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RawCreditSecret::InitAsDefaultInstance() {
  ::com::webank::wedpr::asset_hiding::proto::_RawCreditSecret_default_instance_._instance.get_mutable()->credit_secret_ = const_cast< ::com::webank::wedpr::asset_hiding::proto::CreditSecret*>(
      ::com::webank::wedpr::asset_hiding::proto::CreditSecret::internal_default_instance());
}
class RawCreditSecret::_Internal {
 public:
  static const ::com::webank::wedpr::asset_hiding::proto::CreditSecret& credit_secret(const RawCreditSecret* msg);
};

const ::com::webank::wedpr::asset_hiding::proto::CreditSecret&
RawCreditSecret::_Internal::credit_secret(const RawCreditSecret* msg) {
  return *msg->credit_secret_;
}
RawCreditSecret::RawCreditSecret()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.webank.wedpr.asset_hiding.proto.RawCreditSecret)
}
RawCreditSecret::RawCreditSecret(const RawCreditSecret& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  secret_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.secret_uuid().empty()) {
    secret_uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.secret_uuid_);
  }
  if (from.has_credit_secret()) {
    credit_secret_ = new ::com::webank::wedpr::asset_hiding::proto::CreditSecret(*from.credit_secret_);
  } else {
    credit_secret_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.webank.wedpr.asset_hiding.proto.RawCreditSecret)
}

void RawCreditSecret::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RawCreditSecret_common_2eproto.base);
  secret_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  credit_secret_ = nullptr;
}

RawCreditSecret::~RawCreditSecret() {
  // @@protoc_insertion_point(destructor:com.webank.wedpr.asset_hiding.proto.RawCreditSecret)
  SharedDtor();
}

void RawCreditSecret::SharedDtor() {
  secret_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete credit_secret_;
}

void RawCreditSecret::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RawCreditSecret& RawCreditSecret::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RawCreditSecret_common_2eproto.base);
  return *internal_default_instance();
}


void RawCreditSecret::Clear() {
// @@protoc_insertion_point(message_clear_start:com.webank.wedpr.asset_hiding.proto.RawCreditSecret)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  secret_uuid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && credit_secret_ != nullptr) {
    delete credit_secret_;
  }
  credit_secret_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RawCreditSecret::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.webank.wedpr.asset_hiding.proto.CreditSecret credit_secret = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_credit_secret(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string secret_uuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_secret_uuid(), ptr, ctx, "com.webank.wedpr.asset_hiding.proto.RawCreditSecret.secret_uuid");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RawCreditSecret::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.webank.wedpr.asset_hiding.proto.RawCreditSecret)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.webank.wedpr.asset_hiding.proto.CreditSecret credit_secret = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_credit_secret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string secret_uuid = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_secret_uuid()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->secret_uuid().data(), static_cast<int>(this->secret_uuid().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.webank.wedpr.asset_hiding.proto.RawCreditSecret.secret_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.webank.wedpr.asset_hiding.proto.RawCreditSecret)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.webank.wedpr.asset_hiding.proto.RawCreditSecret)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RawCreditSecret::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.webank.wedpr.asset_hiding.proto.RawCreditSecret)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditSecret credit_secret = 1;
  if (this->has_credit_secret()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::credit_secret(this), output);
  }

  // string secret_uuid = 2;
  if (this->secret_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->secret_uuid().data(), static_cast<int>(this->secret_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.RawCreditSecret.secret_uuid");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->secret_uuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.webank.wedpr.asset_hiding.proto.RawCreditSecret)
}

::PROTOBUF_NAMESPACE_ID::uint8* RawCreditSecret::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.webank.wedpr.asset_hiding.proto.RawCreditSecret)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.webank.wedpr.asset_hiding.proto.CreditSecret credit_secret = 1;
  if (this->has_credit_secret()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::credit_secret(this), target);
  }

  // string secret_uuid = 2;
  if (this->secret_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->secret_uuid().data(), static_cast<int>(this->secret_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.webank.wedpr.asset_hiding.proto.RawCreditSecret.secret_uuid");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->secret_uuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.webank.wedpr.asset_hiding.proto.RawCreditSecret)
  return target;
}

size_t RawCreditSecret::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.webank.wedpr.asset_hiding.proto.RawCreditSecret)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string secret_uuid = 2;
  if (this->secret_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->secret_uuid());
  }

  // .com.webank.wedpr.asset_hiding.proto.CreditSecret credit_secret = 1;
  if (this->has_credit_secret()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *credit_secret_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawCreditSecret::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.webank.wedpr.asset_hiding.proto.RawCreditSecret)
  GOOGLE_DCHECK_NE(&from, this);
  const RawCreditSecret* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RawCreditSecret>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.webank.wedpr.asset_hiding.proto.RawCreditSecret)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.webank.wedpr.asset_hiding.proto.RawCreditSecret)
    MergeFrom(*source);
  }
}

void RawCreditSecret::MergeFrom(const RawCreditSecret& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.webank.wedpr.asset_hiding.proto.RawCreditSecret)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.secret_uuid().size() > 0) {

    secret_uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.secret_uuid_);
  }
  if (from.has_credit_secret()) {
    mutable_credit_secret()->::com::webank::wedpr::asset_hiding::proto::CreditSecret::MergeFrom(from.credit_secret());
  }
}

void RawCreditSecret::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.webank.wedpr.asset_hiding.proto.RawCreditSecret)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawCreditSecret::CopyFrom(const RawCreditSecret& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.webank.wedpr.asset_hiding.proto.RawCreditSecret)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawCreditSecret::IsInitialized() const {
  return true;
}

void RawCreditSecret::InternalSwap(RawCreditSecret* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  secret_uuid_.Swap(&other->secret_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(credit_secret_, other->credit_secret_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RawCreditSecret::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace asset_hiding
}  // namespace wedpr
}  // namespace webank
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::webank::wedpr::asset_hiding::proto::HiddenCredit* Arena::CreateMaybeMessage< ::com::webank::wedpr::asset_hiding::proto::HiddenCredit >(Arena* arena) {
  return Arena::CreateInternal< ::com::webank::wedpr::asset_hiding::proto::HiddenCredit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::webank::wedpr::asset_hiding::proto::CreditStorage* Arena::CreateMaybeMessage< ::com::webank::wedpr::asset_hiding::proto::CreditStorage >(Arena* arena) {
  return Arena::CreateInternal< ::com::webank::wedpr::asset_hiding::proto::CreditStorage >(arena);
}
template<> PROTOBUF_NOINLINE ::com::webank::wedpr::asset_hiding::proto::CreditValue* Arena::CreateMaybeMessage< ::com::webank::wedpr::asset_hiding::proto::CreditValue >(Arena* arena) {
  return Arena::CreateInternal< ::com::webank::wedpr::asset_hiding::proto::CreditValue >(arena);
}
template<> PROTOBUF_NOINLINE ::com::webank::wedpr::asset_hiding::proto::CreditSecret* Arena::CreateMaybeMessage< ::com::webank::wedpr::asset_hiding::proto::CreditSecret >(Arena* arena) {
  return Arena::CreateInternal< ::com::webank::wedpr::asset_hiding::proto::CreditSecret >(arena);
}
template<> PROTOBUF_NOINLINE ::com::webank::wedpr::asset_hiding::proto::CreditCredential* Arena::CreateMaybeMessage< ::com::webank::wedpr::asset_hiding::proto::CreditCredential >(Arena* arena) {
  return Arena::CreateInternal< ::com::webank::wedpr::asset_hiding::proto::CreditCredential >(arena);
}
template<> PROTOBUF_NOINLINE ::com::webank::wedpr::asset_hiding::proto::SignatureInfo* Arena::CreateMaybeMessage< ::com::webank::wedpr::asset_hiding::proto::SignatureInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::webank::wedpr::asset_hiding::proto::SignatureInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::webank::wedpr::asset_hiding::proto::TransactionInfo* Arena::CreateMaybeMessage< ::com::webank::wedpr::asset_hiding::proto::TransactionInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::webank::wedpr::asset_hiding::proto::TransactionInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::webank::wedpr::asset_hiding::proto::RegulationInfo* Arena::CreateMaybeMessage< ::com::webank::wedpr::asset_hiding::proto::RegulationInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::webank::wedpr::asset_hiding::proto::RegulationInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::webank::wedpr::asset_hiding::proto::RawCreditSecret* Arena::CreateMaybeMessage< ::com::webank::wedpr::asset_hiding::proto::RawCreditSecret >(Arena* arena) {
  return Arena::CreateInternal< ::com::webank::wedpr::asset_hiding::proto::RawCreditSecret >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
